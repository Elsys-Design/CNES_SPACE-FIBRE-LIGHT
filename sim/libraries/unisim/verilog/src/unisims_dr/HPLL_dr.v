`include "B_HPLL_defines.vh"

reg [`HPLL_DATA_SZ-1:0] ATTR [0:`HPLL_ADDR_N-1];
reg [`HPLL__CLKFBOUT_MULT_SZ-1:0] CLKFBOUT_MULT_REG = CLKFBOUT_MULT;
real CLKFBOUT_PHASE_REG = CLKFBOUT_PHASE;
real CLKIN_FREQ_MAX_REG = CLKIN_FREQ_MAX;
real CLKIN_FREQ_MIN_REG = CLKIN_FREQ_MIN;
real CLKIN_PERIOD_REG = CLKIN_PERIOD;
reg [`HPLL__CLKOUT0_DIVIDE_SZ-1:0] CLKOUT0_DIVIDE_REG = CLKOUT0_DIVIDE;
real CLKOUT0_DUTY_CYCLE_REG = CLKOUT0_DUTY_CYCLE;
real CLKOUT0_PHASE_REG = CLKOUT0_PHASE;
reg [`HPLL__CLKOUT0_PHASE_CTRL_SZ-1:0] CLKOUT0_PHASE_CTRL_REG = CLKOUT0_PHASE_CTRL;
reg [`HPLL__CLKOUT1_DIVIDE_SZ-1:0] CLKOUT1_DIVIDE_REG = CLKOUT1_DIVIDE;
real CLKOUT1_DUTY_CYCLE_REG = CLKOUT1_DUTY_CYCLE;
real CLKOUT1_PHASE_REG = CLKOUT1_PHASE;
reg [`HPLL__CLKOUT1_PHASE_CTRL_SZ-1:0] CLKOUT1_PHASE_CTRL_REG = CLKOUT1_PHASE_CTRL;
reg [`HPLL__CLKOUT2_DIVIDE_SZ-1:0] CLKOUT2_DIVIDE_REG = CLKOUT2_DIVIDE;
real CLKOUT2_DUTY_CYCLE_REG = CLKOUT2_DUTY_CYCLE;
real CLKOUT2_PHASE_REG = CLKOUT2_PHASE;
reg [`HPLL__CLKOUT2_PHASE_CTRL_SZ-1:0] CLKOUT2_PHASE_CTRL_REG = CLKOUT2_PHASE_CTRL;
reg [`HPLL__CLKOUT3_DIVIDE_SZ-1:0] CLKOUT3_DIVIDE_REG = CLKOUT3_DIVIDE;
real CLKOUT3_DUTY_CYCLE_REG = CLKOUT3_DUTY_CYCLE;
real CLKOUT3_PHASE_REG = CLKOUT3_PHASE;
reg [`HPLL__CLKOUT3_PHASE_CTRL_SZ-1:0] CLKOUT3_PHASE_CTRL_REG = CLKOUT3_PHASE_CTRL;
reg CLKOUTPHY_CASCIN_EN_REG = CLKOUTPHY_CASCIN_EN;
reg CLKOUTPHY_CASCOUT_EN_REG = CLKOUTPHY_CASCOUT_EN;
reg [`HPLL__CLKOUTPHY_DIVIDE_SZ:1] CLKOUTPHY_DIVIDE_REG = CLKOUTPHY_DIVIDE;
real CLKPFD_FREQ_MAX_REG = CLKPFD_FREQ_MAX;
real CLKPFD_FREQ_MIN_REG = CLKPFD_FREQ_MIN;
reg DESKEW2_MUXIN_SEL_REG = DESKEW2_MUXIN_SEL;
reg [`HPLL__DESKEW_DELAY1_SZ-1:0] DESKEW_DELAY1_REG = DESKEW_DELAY1;
reg [`HPLL__DESKEW_DELAY2_SZ-1:0] DESKEW_DELAY2_REG = DESKEW_DELAY2;
reg [`HPLL__DESKEW_DELAY_EN1_SZ:1] DESKEW_DELAY_EN1_REG = DESKEW_DELAY_EN1;
reg [`HPLL__DESKEW_DELAY_EN2_SZ:1] DESKEW_DELAY_EN2_REG = DESKEW_DELAY_EN2;
reg [`HPLL__DESKEW_DELAY_PATH1_SZ:1] DESKEW_DELAY_PATH1_REG = DESKEW_DELAY_PATH1;
reg [`HPLL__DESKEW_DELAY_PATH2_SZ:1] DESKEW_DELAY_PATH2_REG = DESKEW_DELAY_PATH2;
reg DESKEW_MUXIN_SEL_REG = DESKEW_MUXIN_SEL;
reg DIV4_CLKOUT012_REG = DIV4_CLKOUT012;
reg DIV4_CLKOUT3_REG = DIV4_CLKOUT3;
reg [`HPLL__DIVCLK_DIVIDE_SZ-1:0] DIVCLK_DIVIDE_REG = DIVCLK_DIVIDE;
reg IS_CLKFB1_DESKEW_INVERTED_REG = IS_CLKFB1_DESKEW_INVERTED;
reg IS_CLKFB2_DESKEW_INVERTED_REG = IS_CLKFB2_DESKEW_INVERTED;
reg IS_CLKIN1_DESKEW_INVERTED_REG = IS_CLKIN1_DESKEW_INVERTED;
reg IS_CLKIN2_DESKEW_INVERTED_REG = IS_CLKIN2_DESKEW_INVERTED;
reg IS_CLKIN_INVERTED_REG = IS_CLKIN_INVERTED;
reg IS_PSEN_INVERTED_REG = IS_PSEN_INVERTED;
reg IS_PSINCDEC_INVERTED_REG = IS_PSINCDEC_INVERTED;
reg IS_PWRDWN_INVERTED_REG = IS_PWRDWN_INVERTED;
reg IS_RST_INVERTED_REG = IS_RST_INVERTED;
real REF_JITTER_REG = REF_JITTER;
real VCOCLK_FREQ_MAX_REG = VCOCLK_FREQ_MAX;
real VCOCLK_FREQ_MIN_REG = VCOCLK_FREQ_MIN;

initial begin
  ATTR[`HPLL__CLKFBOUT_MULT] = CLKFBOUT_MULT;
  ATTR[`HPLL__CLKFBOUT_PHASE] = $realtobits(CLKFBOUT_PHASE);
  ATTR[`HPLL__CLKIN_FREQ_MAX] = $realtobits(CLKIN_FREQ_MAX);
  ATTR[`HPLL__CLKIN_FREQ_MIN] = $realtobits(CLKIN_FREQ_MIN);
  ATTR[`HPLL__CLKIN_PERIOD] = $realtobits(CLKIN_PERIOD);
  ATTR[`HPLL__CLKOUT0_DIVIDE] = CLKOUT0_DIVIDE;
  ATTR[`HPLL__CLKOUT0_DUTY_CYCLE] = $realtobits(CLKOUT0_DUTY_CYCLE);
  ATTR[`HPLL__CLKOUT0_PHASE] = $realtobits(CLKOUT0_PHASE);
  ATTR[`HPLL__CLKOUT0_PHASE_CTRL] = CLKOUT0_PHASE_CTRL;
  ATTR[`HPLL__CLKOUT1_DIVIDE] = CLKOUT1_DIVIDE;
  ATTR[`HPLL__CLKOUT1_DUTY_CYCLE] = $realtobits(CLKOUT1_DUTY_CYCLE);
  ATTR[`HPLL__CLKOUT1_PHASE] = $realtobits(CLKOUT1_PHASE);
  ATTR[`HPLL__CLKOUT1_PHASE_CTRL] = CLKOUT1_PHASE_CTRL;
  ATTR[`HPLL__CLKOUT2_DIVIDE] = CLKOUT2_DIVIDE;
  ATTR[`HPLL__CLKOUT2_DUTY_CYCLE] = $realtobits(CLKOUT2_DUTY_CYCLE);
  ATTR[`HPLL__CLKOUT2_PHASE] = $realtobits(CLKOUT2_PHASE);
  ATTR[`HPLL__CLKOUT2_PHASE_CTRL] = CLKOUT2_PHASE_CTRL;
  ATTR[`HPLL__CLKOUT3_DIVIDE] = CLKOUT3_DIVIDE;
  ATTR[`HPLL__CLKOUT3_DUTY_CYCLE] = $realtobits(CLKOUT3_DUTY_CYCLE);
  ATTR[`HPLL__CLKOUT3_PHASE] = $realtobits(CLKOUT3_PHASE);
  ATTR[`HPLL__CLKOUT3_PHASE_CTRL] = CLKOUT3_PHASE_CTRL;
  ATTR[`HPLL__CLKOUTPHY_CASCIN_EN] = CLKOUTPHY_CASCIN_EN;
  ATTR[`HPLL__CLKOUTPHY_CASCOUT_EN] = CLKOUTPHY_CASCOUT_EN;
  ATTR[`HPLL__CLKOUTPHY_DIVIDE] = CLKOUTPHY_DIVIDE;
  ATTR[`HPLL__CLKPFD_FREQ_MAX] = $realtobits(CLKPFD_FREQ_MAX);
  ATTR[`HPLL__CLKPFD_FREQ_MIN] = $realtobits(CLKPFD_FREQ_MIN);
  ATTR[`HPLL__DESKEW2_MUXIN_SEL] = DESKEW2_MUXIN_SEL;
  ATTR[`HPLL__DESKEW_DELAY1] = DESKEW_DELAY1;
  ATTR[`HPLL__DESKEW_DELAY2] = DESKEW_DELAY2;
  ATTR[`HPLL__DESKEW_DELAY_EN1] = DESKEW_DELAY_EN1;
  ATTR[`HPLL__DESKEW_DELAY_EN2] = DESKEW_DELAY_EN2;
  ATTR[`HPLL__DESKEW_DELAY_PATH1] = DESKEW_DELAY_PATH1;
  ATTR[`HPLL__DESKEW_DELAY_PATH2] = DESKEW_DELAY_PATH2;
  ATTR[`HPLL__DESKEW_MUXIN_SEL] = DESKEW_MUXIN_SEL;
  ATTR[`HPLL__DIV4_CLKOUT012] = DIV4_CLKOUT012;
  ATTR[`HPLL__DIV4_CLKOUT3] = DIV4_CLKOUT3;
  ATTR[`HPLL__DIVCLK_DIVIDE] = DIVCLK_DIVIDE;
  ATTR[`HPLL__IS_CLKFB1_DESKEW_INVERTED] = IS_CLKFB1_DESKEW_INVERTED;
  ATTR[`HPLL__IS_CLKFB2_DESKEW_INVERTED] = IS_CLKFB2_DESKEW_INVERTED;
  ATTR[`HPLL__IS_CLKIN1_DESKEW_INVERTED] = IS_CLKIN1_DESKEW_INVERTED;
  ATTR[`HPLL__IS_CLKIN2_DESKEW_INVERTED] = IS_CLKIN2_DESKEW_INVERTED;
  ATTR[`HPLL__IS_CLKIN_INVERTED] = IS_CLKIN_INVERTED;
  ATTR[`HPLL__IS_PSEN_INVERTED] = IS_PSEN_INVERTED;
  ATTR[`HPLL__IS_PSINCDEC_INVERTED] = IS_PSINCDEC_INVERTED;
  ATTR[`HPLL__IS_PWRDWN_INVERTED] = IS_PWRDWN_INVERTED;
  ATTR[`HPLL__IS_RST_INVERTED] = IS_RST_INVERTED;
  ATTR[`HPLL__REF_JITTER] = $realtobits(REF_JITTER);
  ATTR[`HPLL__VCOCLK_FREQ_MAX] = $realtobits(VCOCLK_FREQ_MAX);
  ATTR[`HPLL__VCOCLK_FREQ_MIN] = $realtobits(VCOCLK_FREQ_MIN);
end

always @(trig_attr) begin
  CLKFBOUT_MULT_REG = ATTR[`HPLL__CLKFBOUT_MULT];
  CLKFBOUT_PHASE_REG = $bitstoreal(ATTR[`HPLL__CLKFBOUT_PHASE]);
  CLKIN_FREQ_MAX_REG = $bitstoreal(ATTR[`HPLL__CLKIN_FREQ_MAX]);
  CLKIN_FREQ_MIN_REG = $bitstoreal(ATTR[`HPLL__CLKIN_FREQ_MIN]);
  CLKIN_PERIOD_REG = $bitstoreal(ATTR[`HPLL__CLKIN_PERIOD]);
  CLKOUT0_DIVIDE_REG = ATTR[`HPLL__CLKOUT0_DIVIDE];
  CLKOUT0_DUTY_CYCLE_REG = $bitstoreal(ATTR[`HPLL__CLKOUT0_DUTY_CYCLE]);
  CLKOUT0_PHASE_CTRL_REG = ATTR[`HPLL__CLKOUT0_PHASE_CTRL];
  CLKOUT0_PHASE_REG = $bitstoreal(ATTR[`HPLL__CLKOUT0_PHASE]);
  CLKOUT1_DIVIDE_REG = ATTR[`HPLL__CLKOUT1_DIVIDE];
  CLKOUT1_DUTY_CYCLE_REG = $bitstoreal(ATTR[`HPLL__CLKOUT1_DUTY_CYCLE]);
  CLKOUT1_PHASE_CTRL_REG = ATTR[`HPLL__CLKOUT1_PHASE_CTRL];
  CLKOUT1_PHASE_REG = $bitstoreal(ATTR[`HPLL__CLKOUT1_PHASE]);
  CLKOUT2_DIVIDE_REG = ATTR[`HPLL__CLKOUT2_DIVIDE];
  CLKOUT2_DUTY_CYCLE_REG = $bitstoreal(ATTR[`HPLL__CLKOUT2_DUTY_CYCLE]);
  CLKOUT2_PHASE_CTRL_REG = ATTR[`HPLL__CLKOUT2_PHASE_CTRL];
  CLKOUT2_PHASE_REG = $bitstoreal(ATTR[`HPLL__CLKOUT2_PHASE]);
  CLKOUT3_DIVIDE_REG = ATTR[`HPLL__CLKOUT3_DIVIDE];
  CLKOUT3_DUTY_CYCLE_REG = $bitstoreal(ATTR[`HPLL__CLKOUT3_DUTY_CYCLE]);
  CLKOUT3_PHASE_CTRL_REG = ATTR[`HPLL__CLKOUT3_PHASE_CTRL];
  CLKOUT3_PHASE_REG = $bitstoreal(ATTR[`HPLL__CLKOUT3_PHASE]);
  CLKOUTPHY_CASCIN_EN_REG = ATTR[`HPLL__CLKOUTPHY_CASCIN_EN];
  CLKOUTPHY_CASCOUT_EN_REG = ATTR[`HPLL__CLKOUTPHY_CASCOUT_EN];
  CLKOUTPHY_DIVIDE_REG = ATTR[`HPLL__CLKOUTPHY_DIVIDE];
  CLKPFD_FREQ_MAX_REG = $bitstoreal(ATTR[`HPLL__CLKPFD_FREQ_MAX]);
  CLKPFD_FREQ_MIN_REG = $bitstoreal(ATTR[`HPLL__CLKPFD_FREQ_MIN]);
  DESKEW2_MUXIN_SEL_REG = ATTR[`HPLL__DESKEW2_MUXIN_SEL];
  DESKEW_DELAY1_REG = ATTR[`HPLL__DESKEW_DELAY1];
  DESKEW_DELAY2_REG = ATTR[`HPLL__DESKEW_DELAY2];
  DESKEW_DELAY_EN1_REG = ATTR[`HPLL__DESKEW_DELAY_EN1];
  DESKEW_DELAY_EN2_REG = ATTR[`HPLL__DESKEW_DELAY_EN2];
  DESKEW_DELAY_PATH1_REG = ATTR[`HPLL__DESKEW_DELAY_PATH1];
  DESKEW_DELAY_PATH2_REG = ATTR[`HPLL__DESKEW_DELAY_PATH2];
  DESKEW_MUXIN_SEL_REG = ATTR[`HPLL__DESKEW_MUXIN_SEL];
  DIV4_CLKOUT012_REG = ATTR[`HPLL__DIV4_CLKOUT012];
  DIV4_CLKOUT3_REG = ATTR[`HPLL__DIV4_CLKOUT3];
  DIVCLK_DIVIDE_REG = ATTR[`HPLL__DIVCLK_DIVIDE];
  IS_CLKFB1_DESKEW_INVERTED_REG = ATTR[`HPLL__IS_CLKFB1_DESKEW_INVERTED];
  IS_CLKFB2_DESKEW_INVERTED_REG = ATTR[`HPLL__IS_CLKFB2_DESKEW_INVERTED];
  IS_CLKIN1_DESKEW_INVERTED_REG = ATTR[`HPLL__IS_CLKIN1_DESKEW_INVERTED];
  IS_CLKIN2_DESKEW_INVERTED_REG = ATTR[`HPLL__IS_CLKIN2_DESKEW_INVERTED];
  IS_CLKIN_INVERTED_REG = ATTR[`HPLL__IS_CLKIN_INVERTED];
  IS_PSEN_INVERTED_REG = ATTR[`HPLL__IS_PSEN_INVERTED];
  IS_PSINCDEC_INVERTED_REG = ATTR[`HPLL__IS_PSINCDEC_INVERTED];
  IS_PWRDWN_INVERTED_REG = ATTR[`HPLL__IS_PWRDWN_INVERTED];
  IS_RST_INVERTED_REG = ATTR[`HPLL__IS_RST_INVERTED];
  REF_JITTER_REG = $bitstoreal(ATTR[`HPLL__REF_JITTER]);
  VCOCLK_FREQ_MAX_REG = $bitstoreal(ATTR[`HPLL__VCOCLK_FREQ_MAX]);
  VCOCLK_FREQ_MIN_REG = $bitstoreal(ATTR[`HPLL__VCOCLK_FREQ_MIN]);
end

// procedures to override, read attribute values

task write_attr;
  input  [`HPLL_ADDR_SZ-1:0] addr;
  input  [`HPLL_DATA_SZ-1:0] data;
  begin
    ATTR[addr] = data;
    trig_attr = ~trig_attr; // to be removed
  end
endtask

function [`HPLL_DATA_SZ-1:0] read_attr;
  input  [`HPLL_ADDR_SZ-1:0] addr;
  begin
    read_attr = ATTR[addr];
  end
endfunction

task commit_attr;
  begin
trig_attr = ~trig_attr;
  end
endtask
