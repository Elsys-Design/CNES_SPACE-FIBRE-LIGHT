`include "B_XRAM_defines.vh"

reg [`XRAM_DATA_SZ-1:0] ATTR [0:`XRAM_ADDR_N-1];
real MEM_FREQ_REG = MEM_FREQ;
real PL_INTERFACE_1_FREQUENCY_REG = PL_INTERFACE_1_FREQUENCY;
reg [`XRAM__PL_INTERFACE_1_INTERFACE_BANDWIDTH_SZ-1:0] PL_INTERFACE_1_INTERFACE_BANDWIDTH_REG = PL_INTERFACE_1_INTERFACE_BANDWIDTH;
reg PL_INTERFACE_1_INTERFACE_USAGE_REG = PL_INTERFACE_1_INTERFACE_USAGE;
reg [`XRAM__PL_INTERFACE_1_INTERFACE_WIDTH_SZ-1:0] PL_INTERFACE_1_INTERFACE_WIDTH_REG = PL_INTERFACE_1_INTERFACE_WIDTH;
reg [`XRAM__PL_INTERFACE_1_NUM_MEM_BANKS_SZ-1:0] PL_INTERFACE_1_NUM_MEM_BANKS_REG = PL_INTERFACE_1_NUM_MEM_BANKS;
real PL_INTERFACE_2_FREQUENCY_REG = PL_INTERFACE_2_FREQUENCY;
reg [`XRAM__PL_INTERFACE_2_INTERFACE_BANDWIDTH_SZ-1:0] PL_INTERFACE_2_INTERFACE_BANDWIDTH_REG = PL_INTERFACE_2_INTERFACE_BANDWIDTH;
reg PL_INTERFACE_2_INTERFACE_USAGE_REG = PL_INTERFACE_2_INTERFACE_USAGE;
reg [`XRAM__PL_INTERFACE_2_INTERFACE_WIDTH_SZ-1:0] PL_INTERFACE_2_INTERFACE_WIDTH_REG = PL_INTERFACE_2_INTERFACE_WIDTH;
reg [`XRAM__PL_INTERFACE_2_NUM_MEM_BANKS_SZ-1:0] PL_INTERFACE_2_NUM_MEM_BANKS_REG = PL_INTERFACE_2_NUM_MEM_BANKS;
real PL_INTERFACE_3_FREQUENCY_REG = PL_INTERFACE_3_FREQUENCY;
reg [`XRAM__PL_INTERFACE_3_INTERFACE_BANDWIDTH_SZ-1:0] PL_INTERFACE_3_INTERFACE_BANDWIDTH_REG = PL_INTERFACE_3_INTERFACE_BANDWIDTH;
reg PL_INTERFACE_3_INTERFACE_USAGE_REG = PL_INTERFACE_3_INTERFACE_USAGE;
reg [`XRAM__PL_INTERFACE_3_INTERFACE_WIDTH_SZ-1:0] PL_INTERFACE_3_INTERFACE_WIDTH_REG = PL_INTERFACE_3_INTERFACE_WIDTH;
reg [`XRAM__PL_INTERFACE_3_NUM_MEM_BANKS_SZ-1:0] PL_INTERFACE_3_NUM_MEM_BANKS_REG = PL_INTERFACE_3_NUM_MEM_BANKS;
reg [`XRAM__PS_INTERFACE_BANDWIDTH_SZ-1:0] PS_INTERFACE_BANDWIDTH_REG = PS_INTERFACE_BANDWIDTH;
reg [`XRAM__PS_INTERFACE_NUM_MEM_BANKS_SZ-1:0] PS_INTERFACE_NUM_MEM_BANKS_REG = PS_INTERFACE_NUM_MEM_BANKS;
reg PS_INTERFACE_USAGE_REG = PS_INTERFACE_USAGE;

initial begin
  ATTR[`XRAM__MEM_FREQ] = $realtobits(MEM_FREQ);
  ATTR[`XRAM__PL_INTERFACE_1_FREQUENCY] = $realtobits(PL_INTERFACE_1_FREQUENCY);
  ATTR[`XRAM__PL_INTERFACE_1_INTERFACE_BANDWIDTH] = PL_INTERFACE_1_INTERFACE_BANDWIDTH;
  ATTR[`XRAM__PL_INTERFACE_1_INTERFACE_USAGE] = PL_INTERFACE_1_INTERFACE_USAGE;
  ATTR[`XRAM__PL_INTERFACE_1_INTERFACE_WIDTH] = PL_INTERFACE_1_INTERFACE_WIDTH;
  ATTR[`XRAM__PL_INTERFACE_1_NUM_MEM_BANKS] = PL_INTERFACE_1_NUM_MEM_BANKS;
  ATTR[`XRAM__PL_INTERFACE_2_FREQUENCY] = $realtobits(PL_INTERFACE_2_FREQUENCY);
  ATTR[`XRAM__PL_INTERFACE_2_INTERFACE_BANDWIDTH] = PL_INTERFACE_2_INTERFACE_BANDWIDTH;
  ATTR[`XRAM__PL_INTERFACE_2_INTERFACE_USAGE] = PL_INTERFACE_2_INTERFACE_USAGE;
  ATTR[`XRAM__PL_INTERFACE_2_INTERFACE_WIDTH] = PL_INTERFACE_2_INTERFACE_WIDTH;
  ATTR[`XRAM__PL_INTERFACE_2_NUM_MEM_BANKS] = PL_INTERFACE_2_NUM_MEM_BANKS;
  ATTR[`XRAM__PL_INTERFACE_3_FREQUENCY] = $realtobits(PL_INTERFACE_3_FREQUENCY);
  ATTR[`XRAM__PL_INTERFACE_3_INTERFACE_BANDWIDTH] = PL_INTERFACE_3_INTERFACE_BANDWIDTH;
  ATTR[`XRAM__PL_INTERFACE_3_INTERFACE_USAGE] = PL_INTERFACE_3_INTERFACE_USAGE;
  ATTR[`XRAM__PL_INTERFACE_3_INTERFACE_WIDTH] = PL_INTERFACE_3_INTERFACE_WIDTH;
  ATTR[`XRAM__PL_INTERFACE_3_NUM_MEM_BANKS] = PL_INTERFACE_3_NUM_MEM_BANKS;
  ATTR[`XRAM__PS_INTERFACE_BANDWIDTH] = PS_INTERFACE_BANDWIDTH;
  ATTR[`XRAM__PS_INTERFACE_NUM_MEM_BANKS] = PS_INTERFACE_NUM_MEM_BANKS;
  ATTR[`XRAM__PS_INTERFACE_USAGE] = PS_INTERFACE_USAGE;
end

always @(trig_attr) begin
  MEM_FREQ_REG = $bitstoreal(ATTR[`XRAM__MEM_FREQ]);
  PL_INTERFACE_1_FREQUENCY_REG = $bitstoreal(ATTR[`XRAM__PL_INTERFACE_1_FREQUENCY]);
  PL_INTERFACE_1_INTERFACE_BANDWIDTH_REG = ATTR[`XRAM__PL_INTERFACE_1_INTERFACE_BANDWIDTH];
  PL_INTERFACE_1_INTERFACE_USAGE_REG = ATTR[`XRAM__PL_INTERFACE_1_INTERFACE_USAGE];
  PL_INTERFACE_1_INTERFACE_WIDTH_REG = ATTR[`XRAM__PL_INTERFACE_1_INTERFACE_WIDTH];
  PL_INTERFACE_1_NUM_MEM_BANKS_REG = ATTR[`XRAM__PL_INTERFACE_1_NUM_MEM_BANKS];
  PL_INTERFACE_2_FREQUENCY_REG = $bitstoreal(ATTR[`XRAM__PL_INTERFACE_2_FREQUENCY]);
  PL_INTERFACE_2_INTERFACE_BANDWIDTH_REG = ATTR[`XRAM__PL_INTERFACE_2_INTERFACE_BANDWIDTH];
  PL_INTERFACE_2_INTERFACE_USAGE_REG = ATTR[`XRAM__PL_INTERFACE_2_INTERFACE_USAGE];
  PL_INTERFACE_2_INTERFACE_WIDTH_REG = ATTR[`XRAM__PL_INTERFACE_2_INTERFACE_WIDTH];
  PL_INTERFACE_2_NUM_MEM_BANKS_REG = ATTR[`XRAM__PL_INTERFACE_2_NUM_MEM_BANKS];
  PL_INTERFACE_3_FREQUENCY_REG = $bitstoreal(ATTR[`XRAM__PL_INTERFACE_3_FREQUENCY]);
  PL_INTERFACE_3_INTERFACE_BANDWIDTH_REG = ATTR[`XRAM__PL_INTERFACE_3_INTERFACE_BANDWIDTH];
  PL_INTERFACE_3_INTERFACE_USAGE_REG = ATTR[`XRAM__PL_INTERFACE_3_INTERFACE_USAGE];
  PL_INTERFACE_3_INTERFACE_WIDTH_REG = ATTR[`XRAM__PL_INTERFACE_3_INTERFACE_WIDTH];
  PL_INTERFACE_3_NUM_MEM_BANKS_REG = ATTR[`XRAM__PL_INTERFACE_3_NUM_MEM_BANKS];
  PS_INTERFACE_BANDWIDTH_REG = ATTR[`XRAM__PS_INTERFACE_BANDWIDTH];
  PS_INTERFACE_NUM_MEM_BANKS_REG = ATTR[`XRAM__PS_INTERFACE_NUM_MEM_BANKS];
  PS_INTERFACE_USAGE_REG = ATTR[`XRAM__PS_INTERFACE_USAGE];
end

// procedures to override, read attribute values

task write_attr;
  input  [`XRAM_ADDR_SZ-1:0] addr;
  input  [`XRAM_DATA_SZ-1:0] data;
  begin
    ATTR[addr] = data;
    trig_attr = ~trig_attr; // to be removed
  end
endtask

function [`XRAM_DATA_SZ-1:0] read_attr;
  input  [`XRAM_ADDR_SZ-1:0] addr;
  begin
    read_attr = ATTR[addr];
  end
endfunction

task commit_attr;
  begin
trig_attr = ~trig_attr;
  end
endtask
