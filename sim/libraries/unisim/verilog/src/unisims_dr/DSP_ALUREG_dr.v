`include "B_DSP_ALUREG_defines.vh"

reg [`DSP_ALUREG_DATA_SZ-1:0] ATTR [0:`DSP_ALUREG_ADDR_N-1];
reg [`DSP_ALUREG__ALUMODEREG_SZ-1:0] ALUMODEREG_REG = ALUMODEREG;
reg [`DSP_ALUREG__CARRYINREG_SZ-1:0] CARRYINREG_REG = CARRYINREG;
reg [`DSP_ALUREG__CARRYINSELREG_SZ-1:0] CARRYINSELREG_REG = CARRYINSELREG;
reg [`DSP_ALUREG__DSP_MODE_SZ:1] DSP_MODE_REG = DSP_MODE;
reg [`DSP_ALUREG__IS_ALUMODE_INVERTED_SZ-1:0] IS_ALUMODE_INVERTED_REG = IS_ALUMODE_INVERTED;
reg IS_CARRYIN_INVERTED_REG = IS_CARRYIN_INVERTED;
reg [`DSP_ALUREG__IS_OPMODE_INVERTED_SZ-1:0] IS_OPMODE_INVERTED_REG = IS_OPMODE_INVERTED;
reg IS_RSTALLCARRYIN_INVERTED_REG = IS_RSTALLCARRYIN_INVERTED;
reg IS_RSTALUMODE_INVERTED_REG = IS_RSTALUMODE_INVERTED;
reg IS_RSTCTRL_INVERTED_REG = IS_RSTCTRL_INVERTED;
reg [`DSP_ALUREG__MREG_SZ-1:0] MREG_REG = MREG;
reg [`DSP_ALUREG__OPMODEREG_SZ-1:0] OPMODEREG_REG = OPMODEREG;
reg [`DSP_ALUREG__RESET_MODE_SZ:1] RESET_MODE_REG = RESET_MODE;

initial begin
  ATTR[`DSP_ALUREG__ALUMODEREG] = ALUMODEREG;
  ATTR[`DSP_ALUREG__CARRYINREG] = CARRYINREG;
  ATTR[`DSP_ALUREG__CARRYINSELREG] = CARRYINSELREG;
  ATTR[`DSP_ALUREG__DSP_MODE] = DSP_MODE;
  ATTR[`DSP_ALUREG__IS_ALUMODE_INVERTED] = IS_ALUMODE_INVERTED;
  ATTR[`DSP_ALUREG__IS_CARRYIN_INVERTED] = IS_CARRYIN_INVERTED;
  ATTR[`DSP_ALUREG__IS_OPMODE_INVERTED] = IS_OPMODE_INVERTED;
  ATTR[`DSP_ALUREG__IS_RSTALLCARRYIN_INVERTED] = IS_RSTALLCARRYIN_INVERTED;
  ATTR[`DSP_ALUREG__IS_RSTALUMODE_INVERTED] = IS_RSTALUMODE_INVERTED;
  ATTR[`DSP_ALUREG__IS_RSTCTRL_INVERTED] = IS_RSTCTRL_INVERTED;
  ATTR[`DSP_ALUREG__MREG] = MREG;
  ATTR[`DSP_ALUREG__OPMODEREG] = OPMODEREG;
  ATTR[`DSP_ALUREG__RESET_MODE] = RESET_MODE;
end

always @(*) begin
  ALUMODEREG_REG = ATTR[`DSP_ALUREG__ALUMODEREG];
  CARRYINREG_REG = ATTR[`DSP_ALUREG__CARRYINREG];
  CARRYINSELREG_REG = ATTR[`DSP_ALUREG__CARRYINSELREG];
  DSP_MODE_REG = ATTR[`DSP_ALUREG__DSP_MODE];
  IS_ALUMODE_INVERTED_REG = ATTR[`DSP_ALUREG__IS_ALUMODE_INVERTED];
  IS_CARRYIN_INVERTED_REG = ATTR[`DSP_ALUREG__IS_CARRYIN_INVERTED];
  IS_OPMODE_INVERTED_REG = ATTR[`DSP_ALUREG__IS_OPMODE_INVERTED];
  IS_RSTALLCARRYIN_INVERTED_REG = ATTR[`DSP_ALUREG__IS_RSTALLCARRYIN_INVERTED];
  IS_RSTALUMODE_INVERTED_REG = ATTR[`DSP_ALUREG__IS_RSTALUMODE_INVERTED];
  IS_RSTCTRL_INVERTED_REG = ATTR[`DSP_ALUREG__IS_RSTCTRL_INVERTED];
  MREG_REG = ATTR[`DSP_ALUREG__MREG];
  OPMODEREG_REG = ATTR[`DSP_ALUREG__OPMODEREG];
  RESET_MODE_REG = ATTR[`DSP_ALUREG__RESET_MODE];
end

// procedures to override, read attribute values

task write_attr;
  input  [`DSP_ALUREG_ADDR_SZ-1:0] addr;
  input  [`DSP_ALUREG_DATA_SZ-1:0] data;
  begin
    ATTR[addr] = data;
    trig_attr = ~trig_attr; // to be removed
  end
endtask

function [`DSP_ALUREG_DATA_SZ-1:0] read_attr;
  input  [`DSP_ALUREG_ADDR_SZ-1:0] addr;
  begin
    read_attr = ATTR[addr];
  end
endfunction

task commit_attr;
  begin
trig_attr = ~trig_attr;
  end
endtask
