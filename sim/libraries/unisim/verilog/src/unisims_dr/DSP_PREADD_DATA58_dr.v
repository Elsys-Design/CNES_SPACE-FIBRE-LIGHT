`include "B_DSP_PREADD_DATA58_defines.vh"

reg [`DSP_PREADD_DATA58_DATA_SZ-1:0] ATTR [0:`DSP_PREADD_DATA58_ADDR_N-1];
reg [`DSP_PREADD_DATA58__ADREG_SZ-1:0] ADREG_REG = ADREG;
reg [`DSP_PREADD_DATA58__AMULTSEL_SZ:1] AMULTSEL_REG = AMULTSEL;
reg [`DSP_PREADD_DATA58__AREG_SZ-1:0] AREG_REG = AREG;
reg [`DSP_PREADD_DATA58__BMULTSEL_SZ:1] BMULTSEL_REG = BMULTSEL;
reg [`DSP_PREADD_DATA58__BREG_SZ-1:0] BREG_REG = BREG;
reg [`DSP_PREADD_DATA58__DREG_SZ-1:0] DREG_REG = DREG;
reg [`DSP_PREADD_DATA58__DSP_MODE_SZ:1] DSP_MODE_REG = DSP_MODE;
reg [`DSP_PREADD_DATA58__INMODEREG_SZ-1:0] INMODEREG_REG = INMODEREG;
reg [`DSP_PREADD_DATA58__IS_INMODE_INVERTED_SZ-1:0] IS_INMODE_INVERTED_REG = IS_INMODE_INVERTED;
reg [`DSP_PREADD_DATA58__IS_NEGATE_INVERTED_SZ-1:0] IS_NEGATE_INVERTED_REG = IS_NEGATE_INVERTED;
reg IS_RSTINMODE_INVERTED_REG = IS_RSTINMODE_INVERTED;
reg [`DSP_PREADD_DATA58__LEGACY_SZ:1] LEGACY_REG = LEGACY;
reg [`DSP_PREADD_DATA58__MREG_SZ-1:0] MREG_REG = MREG;
reg [`DSP_PREADD_DATA58__PREADDINSEL_SZ:1] PREADDINSEL_REG = PREADDINSEL;
reg [`DSP_PREADD_DATA58__RESET_MODE_SZ:1] RESET_MODE_REG = RESET_MODE;
reg [`DSP_PREADD_DATA58__USE_MULT_SZ:1] USE_MULT_REG = USE_MULT;

initial begin
  ATTR[`DSP_PREADD_DATA58__ADREG] = ADREG;
  ATTR[`DSP_PREADD_DATA58__AMULTSEL] = AMULTSEL;
  ATTR[`DSP_PREADD_DATA58__AREG] = AREG;
  ATTR[`DSP_PREADD_DATA58__BMULTSEL] = BMULTSEL;
  ATTR[`DSP_PREADD_DATA58__BREG] = BREG;
  ATTR[`DSP_PREADD_DATA58__DREG] = DREG;
  ATTR[`DSP_PREADD_DATA58__DSP_MODE] = DSP_MODE;
  ATTR[`DSP_PREADD_DATA58__INMODEREG] = INMODEREG;
  ATTR[`DSP_PREADD_DATA58__IS_INMODE_INVERTED] = IS_INMODE_INVERTED;
  ATTR[`DSP_PREADD_DATA58__IS_NEGATE_INVERTED] = IS_NEGATE_INVERTED;
  ATTR[`DSP_PREADD_DATA58__IS_RSTINMODE_INVERTED] = IS_RSTINMODE_INVERTED;
  ATTR[`DSP_PREADD_DATA58__LEGACY] = LEGACY;
  ATTR[`DSP_PREADD_DATA58__MREG] = MREG;
  ATTR[`DSP_PREADD_DATA58__PREADDINSEL] = PREADDINSEL;
  ATTR[`DSP_PREADD_DATA58__RESET_MODE] = RESET_MODE;
  ATTR[`DSP_PREADD_DATA58__USE_MULT] = USE_MULT;
end

always @(*) begin
  ADREG_REG = ATTR[`DSP_PREADD_DATA58__ADREG];
  AMULTSEL_REG = ATTR[`DSP_PREADD_DATA58__AMULTSEL];
  AREG_REG = ATTR[`DSP_PREADD_DATA58__AREG];
  BMULTSEL_REG = ATTR[`DSP_PREADD_DATA58__BMULTSEL];
  BREG_REG = ATTR[`DSP_PREADD_DATA58__BREG];
  DREG_REG = ATTR[`DSP_PREADD_DATA58__DREG];
  DSP_MODE_REG = ATTR[`DSP_PREADD_DATA58__DSP_MODE];
  INMODEREG_REG = ATTR[`DSP_PREADD_DATA58__INMODEREG];
  IS_INMODE_INVERTED_REG = ATTR[`DSP_PREADD_DATA58__IS_INMODE_INVERTED];
  IS_NEGATE_INVERTED_REG = ATTR[`DSP_PREADD_DATA58__IS_NEGATE_INVERTED];
  IS_RSTINMODE_INVERTED_REG = ATTR[`DSP_PREADD_DATA58__IS_RSTINMODE_INVERTED];
  LEGACY_REG = ATTR[`DSP_PREADD_DATA58__LEGACY];
  MREG_REG = ATTR[`DSP_PREADD_DATA58__MREG];
  PREADDINSEL_REG = ATTR[`DSP_PREADD_DATA58__PREADDINSEL];
  RESET_MODE_REG = ATTR[`DSP_PREADD_DATA58__RESET_MODE];
  USE_MULT_REG = ATTR[`DSP_PREADD_DATA58__USE_MULT];
end

// procedures to override, read attribute values

task write_attr;
  input  [`DSP_PREADD_DATA58_ADDR_SZ-1:0] addr;
  input  [`DSP_PREADD_DATA58_DATA_SZ-1:0] data;
  begin
    ATTR[addr] = data;
    trig_attr = ~trig_attr; // to be removed
  end
endtask

function [`DSP_PREADD_DATA58_DATA_SZ-1:0] read_attr;
  input  [`DSP_PREADD_DATA58_ADDR_SZ-1:0] addr;
  begin
    read_attr = ATTR[addr];
  end
endfunction

task commit_attr;
  begin
trig_attr = ~trig_attr;
  end
endtask
