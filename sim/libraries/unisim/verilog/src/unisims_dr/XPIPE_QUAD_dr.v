`include "B_XPIPE_QUAD_defines.vh"

reg [`XPIPE_QUAD_DATA_SZ-1:0] ATTR [0:`XPIPE_QUAD_ADDR_N-1];
real DATA_RATE_REG = DATA_RATE;
reg [`XPIPE_QUAD__GT_CHANNELS_SZ-1:0] GT_CHANNELS_REG = GT_CHANNELS;
reg [`XPIPE_QUAD__SIM_DEVICE_SZ:1] SIM_DEVICE_REG = SIM_DEVICE;
reg [`XPIPE_QUAD__XPIPE_CLKDLY_CFG_SZ-1:0] XPIPE_CLKDLY_CFG_REG = XPIPE_CLKDLY_CFG;
reg [`XPIPE_QUAD__XPIPE_CLK_CFG_SZ-1:0] XPIPE_CLK_CFG_REG = XPIPE_CLK_CFG;
reg XPIPE_INSTANTIATED_REG = XPIPE_INSTANTIATED;
reg [`XPIPE_QUAD__XPIPE_LINK0_CFG_SZ:1] XPIPE_LINK0_CFG_REG = XPIPE_LINK0_CFG;
reg [`XPIPE_QUAD__XPIPE_LINK1_CFG_SZ:1] XPIPE_LINK1_CFG_REG = XPIPE_LINK1_CFG;
reg [`XPIPE_QUAD__XPIPE_LOC_SZ:1] XPIPE_LOC_REG = XPIPE_LOC;
reg [`XPIPE_QUAD__XPIPE_MODE_SZ-1:0] XPIPE_MODE_REG = XPIPE_MODE;
reg [`XPIPE_QUAD__XPIPE_REG_CFG_SZ-1:0] XPIPE_REG_CFG_REG = XPIPE_REG_CFG;
reg [`XPIPE_QUAD__XPIPE_RSVD_SZ-1:0] XPIPE_RSVD_REG = XPIPE_RSVD;

initial begin
  ATTR[`XPIPE_QUAD__DATA_RATE] = $realtobits(DATA_RATE);
  ATTR[`XPIPE_QUAD__GT_CHANNELS] = GT_CHANNELS;
  ATTR[`XPIPE_QUAD__SIM_DEVICE] = SIM_DEVICE;
  ATTR[`XPIPE_QUAD__XPIPE_CLKDLY_CFG] = XPIPE_CLKDLY_CFG;
  ATTR[`XPIPE_QUAD__XPIPE_CLK_CFG] = XPIPE_CLK_CFG;
  ATTR[`XPIPE_QUAD__XPIPE_INSTANTIATED] = XPIPE_INSTANTIATED;
  ATTR[`XPIPE_QUAD__XPIPE_LINK0_CFG] = XPIPE_LINK0_CFG;
  ATTR[`XPIPE_QUAD__XPIPE_LINK1_CFG] = XPIPE_LINK1_CFG;
  ATTR[`XPIPE_QUAD__XPIPE_LOC] = XPIPE_LOC;
  ATTR[`XPIPE_QUAD__XPIPE_MODE] = XPIPE_MODE;
  ATTR[`XPIPE_QUAD__XPIPE_REG_CFG] = XPIPE_REG_CFG;
  ATTR[`XPIPE_QUAD__XPIPE_RSVD] = XPIPE_RSVD;
end

always @(trig_attr) begin
  DATA_RATE_REG = $bitstoreal(ATTR[`XPIPE_QUAD__DATA_RATE]);
  GT_CHANNELS_REG = ATTR[`XPIPE_QUAD__GT_CHANNELS];
  SIM_DEVICE_REG = ATTR[`XPIPE_QUAD__SIM_DEVICE];
  XPIPE_CLKDLY_CFG_REG = ATTR[`XPIPE_QUAD__XPIPE_CLKDLY_CFG];
  XPIPE_CLK_CFG_REG = ATTR[`XPIPE_QUAD__XPIPE_CLK_CFG];
  XPIPE_INSTANTIATED_REG = ATTR[`XPIPE_QUAD__XPIPE_INSTANTIATED];
  XPIPE_LINK0_CFG_REG = ATTR[`XPIPE_QUAD__XPIPE_LINK0_CFG];
  XPIPE_LINK1_CFG_REG = ATTR[`XPIPE_QUAD__XPIPE_LINK1_CFG];
  XPIPE_LOC_REG = ATTR[`XPIPE_QUAD__XPIPE_LOC];
  XPIPE_MODE_REG = ATTR[`XPIPE_QUAD__XPIPE_MODE];
  XPIPE_REG_CFG_REG = ATTR[`XPIPE_QUAD__XPIPE_REG_CFG];
  XPIPE_RSVD_REG = ATTR[`XPIPE_QUAD__XPIPE_RSVD];
end

// procedures to override, read attribute values

task write_attr;
  input  [`XPIPE_QUAD_ADDR_SZ-1:0] addr;
  input  [`XPIPE_QUAD_DATA_SZ-1:0] data;
  begin
    ATTR[addr] = data;
    trig_attr = ~trig_attr; // to be removed
  end
endtask

function [`XPIPE_QUAD_DATA_SZ-1:0] read_attr;
  input  [`XPIPE_QUAD_ADDR_SZ-1:0] addr;
  begin
    read_attr = ATTR[addr];
  end
endfunction

task commit_attr;
  begin
trig_attr = ~trig_attr;
  end
endtask
