`include "B_MMCME5_TEST_defines.vh"

reg [`MMCME5_TEST_DATA_SZ-1:0] ATTR [0:`MMCME5_TEST_ADDR_N-1];
reg [3:0] ANALOG_MISC_REG = ANALOG_MISC;
reg [2:0] AVDD_COMP_SET_REG = AVDD_COMP_SET;
reg [2:0] AVDD_VBG_PD_REG = AVDD_VBG_PD;
reg [3:0] AVDD_VBG_SEL_REG = AVDD_VBG_SEL;
reg [72:1] BANDWIDTH_REG = BANDWIDTH;
reg [31:0] CLKBURST_CNT_REG = CLKBURST_CNT;
reg [40:1] CLKBURST_ENABLE_REG = CLKBURST_ENABLE;
reg [40:1] CLKBURST_REPEAT_REG = CLKBURST_REPEAT;
reg [40:1] CLKFBIN_EDGE_REG = CLKFBIN_EDGE;
reg [31:0] CLKFBIN_HT_REG = CLKFBIN_HT;
reg [31:0] CLKFBIN_LT_REG = CLKFBIN_LT;
reg [31:0] CLKFBIN_MULT_REG = CLKFBIN_MULT;
reg [40:1] CLKFBIN_NOCOUNT_REG = CLKFBIN_NOCOUNT;
reg [31:0] CLKFBOUT_DT_REG = CLKFBOUT_DT;
reg [40:1] CLKFBOUT_EDGE_REG = CLKFBOUT_EDGE;
reg [40:1] CLKFBOUT_EN_REG = CLKFBOUT_EN;
reg [31:0] CLKFBOUT_FRACT_REG = CLKFBOUT_FRACT;
reg [40:1] CLKFBOUT_FRACT_ALG_REG = CLKFBOUT_FRACT_ALG;
reg [40:1] CLKFBOUT_FRACT_EN_REG = CLKFBOUT_FRACT_EN;
reg [40:1] CLKFBOUT_FRACT_ORDER_REG = CLKFBOUT_FRACT_ORDER;
reg [31:0] CLKFBOUT_FRACT_SEED_REG = CLKFBOUT_FRACT_SEED;
reg [31:0] CLKFBOUT_HT_REG = CLKFBOUT_HT;
reg [31:0] CLKFBOUT_LT_REG = CLKFBOUT_LT;
reg [31:0] CLKFBOUT_MULT_REG = CLKFBOUT_MULT;
reg [1:0] CLKFBOUT_MX_REG = CLKFBOUT_MX;
reg [40:1] CLKFBOUT_NOCOUNT_REG = CLKFBOUT_NOCOUNT;
real CLKFBOUT_PHASE_REG = CLKFBOUT_PHASE;
reg [40:1] CLKFBOUT_PREDIV2_REG = CLKFBOUT_PREDIV2;
real CLKIN1_PERIOD_REG = CLKIN1_PERIOD;
real CLKIN2_PERIOD_REG = CLKIN2_PERIOD;
reg [31:0] CLKOUT0_DIVIDE_REG = CLKOUT0_DIVIDE;
reg [31:0] CLKOUT0_DT_REG = CLKOUT0_DT;
real CLKOUT0_DUTY_CYCLE_REG = CLKOUT0_DUTY_CYCLE;
reg [40:1] CLKOUT0_EDGE_REG = CLKOUT0_EDGE;
reg [31:0] CLKOUT0_HT_REG = CLKOUT0_HT;
reg [31:0] CLKOUT0_LT_REG = CLKOUT0_LT;
reg [1:0] CLKOUT0_MX_REG = CLKOUT0_MX;
reg [40:1] CLKOUT0_NOCOUNT_REG = CLKOUT0_NOCOUNT;
real CLKOUT0_PHASE_REG = CLKOUT0_PHASE;
reg [40:1] CLKOUT0_PREDIV2_REG = CLKOUT0_PREDIV2;
reg [31:0] CLKOUT1_DIVIDE_REG = CLKOUT1_DIVIDE;
reg [31:0] CLKOUT1_DT_REG = CLKOUT1_DT;
real CLKOUT1_DUTY_CYCLE_REG = CLKOUT1_DUTY_CYCLE;
reg [40:1] CLKOUT1_EDGE_REG = CLKOUT1_EDGE;
reg [31:0] CLKOUT1_HT_REG = CLKOUT1_HT;
reg [31:0] CLKOUT1_LT_REG = CLKOUT1_LT;
reg [1:0] CLKOUT1_MX_REG = CLKOUT1_MX;
reg [40:1] CLKOUT1_NOCOUNT_REG = CLKOUT1_NOCOUNT;
real CLKOUT1_PHASE_REG = CLKOUT1_PHASE;
reg [40:1] CLKOUT1_PREDIV2_REG = CLKOUT1_PREDIV2;
reg [31:0] CLKOUT2_DIVIDE_REG = CLKOUT2_DIVIDE;
reg [31:0] CLKOUT2_DT_REG = CLKOUT2_DT;
real CLKOUT2_DUTY_CYCLE_REG = CLKOUT2_DUTY_CYCLE;
reg [40:1] CLKOUT2_EDGE_REG = CLKOUT2_EDGE;
reg [31:0] CLKOUT2_HT_REG = CLKOUT2_HT;
reg [31:0] CLKOUT2_LT_REG = CLKOUT2_LT;
reg [1:0] CLKOUT2_MX_REG = CLKOUT2_MX;
reg [40:1] CLKOUT2_NOCOUNT_REG = CLKOUT2_NOCOUNT;
real CLKOUT2_PHASE_REG = CLKOUT2_PHASE;
reg [40:1] CLKOUT2_PREDIV2_REG = CLKOUT2_PREDIV2;
reg [31:0] CLKOUT3_DIVIDE_REG = CLKOUT3_DIVIDE;
reg [31:0] CLKOUT3_DT_REG = CLKOUT3_DT;
real CLKOUT3_DUTY_CYCLE_REG = CLKOUT3_DUTY_CYCLE;
reg [40:1] CLKOUT3_EDGE_REG = CLKOUT3_EDGE;
reg [31:0] CLKOUT3_HT_REG = CLKOUT3_HT;
reg [31:0] CLKOUT3_LT_REG = CLKOUT3_LT;
reg [1:0] CLKOUT3_MX_REG = CLKOUT3_MX;
reg [40:1] CLKOUT3_NOCOUNT_REG = CLKOUT3_NOCOUNT;
real CLKOUT3_PHASE_REG = CLKOUT3_PHASE;
reg [40:1] CLKOUT3_PREDIV2_REG = CLKOUT3_PREDIV2;
reg [31:0] CLKOUT4_DIVIDE_REG = CLKOUT4_DIVIDE;
reg [31:0] CLKOUT4_DT_REG = CLKOUT4_DT;
real CLKOUT4_DUTY_CYCLE_REG = CLKOUT4_DUTY_CYCLE;
reg [40:1] CLKOUT4_EDGE_REG = CLKOUT4_EDGE;
reg [31:0] CLKOUT4_HT_REG = CLKOUT4_HT;
reg [31:0] CLKOUT4_LT_REG = CLKOUT4_LT;
reg [1:0] CLKOUT4_MX_REG = CLKOUT4_MX;
reg [40:1] CLKOUT4_NOCOUNT_REG = CLKOUT4_NOCOUNT;
real CLKOUT4_PHASE_REG = CLKOUT4_PHASE;
reg [40:1] CLKOUT4_PREDIV2_REG = CLKOUT4_PREDIV2;
reg [31:0] CLKOUT5_DIVIDE_REG = CLKOUT5_DIVIDE;
reg [31:0] CLKOUT5_DT_REG = CLKOUT5_DT;
real CLKOUT5_DUTY_CYCLE_REG = CLKOUT5_DUTY_CYCLE;
reg [40:1] CLKOUT5_EDGE_REG = CLKOUT5_EDGE;
reg [31:0] CLKOUT5_HT_REG = CLKOUT5_HT;
reg [31:0] CLKOUT5_LT_REG = CLKOUT5_LT;
reg [1:0] CLKOUT5_MX_REG = CLKOUT5_MX;
reg [40:1] CLKOUT5_NOCOUNT_REG = CLKOUT5_NOCOUNT;
real CLKOUT5_PHASE_REG = CLKOUT5_PHASE;
reg [40:1] CLKOUT5_PREDIV2_REG = CLKOUT5_PREDIV2;
reg [31:0] CLKOUT6_DIVIDE_REG = CLKOUT6_DIVIDE;
reg [31:0] CLKOUT6_DT_REG = CLKOUT6_DT;
real CLKOUT6_DUTY_CYCLE_REG = CLKOUT6_DUTY_CYCLE;
reg [40:1] CLKOUT6_EDGE_REG = CLKOUT6_EDGE;
reg [31:0] CLKOUT6_HT_REG = CLKOUT6_HT;
reg [31:0] CLKOUT6_LT_REG = CLKOUT6_LT;
reg [1:0] CLKOUT6_MX_REG = CLKOUT6_MX;
reg [40:1] CLKOUT6_NOCOUNT_REG = CLKOUT6_NOCOUNT;
real CLKOUT6_PHASE_REG = CLKOUT6_PHASE;
reg [40:1] CLKOUT6_PREDIV2_REG = CLKOUT6_PREDIV2;
reg [64:1] COMPENSATION_REG = COMPENSATION;
reg [15:0] CONTROL_0_REG = CONTROL_0;
reg [15:0] CONTROL_1_REG = CONTROL_1;
reg [15:0] CONTROL_2_REG = CONTROL_2;
reg [15:0] CONTROL_3_REG = CONTROL_3;
reg [15:0] CONTROL_4_REG = CONTROL_4;
reg [15:0] CONTROL_5_REG = CONTROL_5;
reg [15:0] CONTROL_6_REG = CONTROL_6;
reg [15:0] CONTROL_7_REG = CONTROL_7;
reg [3:0] CP_REG = CP;
reg CP_BIAS_TRIP_SET_REG = CP_BIAS_TRIP_SET;
reg [1:0] CP_RES_REG = CP_RES;
reg [31:0] DESKEW_DLY_REG = DESKEW_DLY;
reg [40:1] DESKEW_DLY_EN_REG = DESKEW_DLY_EN;
reg [40:1] DESKEW_DLY_PATH_REG = DESKEW_DLY_PATH;
reg [40:1] DESKEW_EN_REG = DESKEW_EN;
reg [40:1] DIRECT_PATH_CNTRL_REG = DIRECT_PATH_CNTRL;
reg [31:0] DIVCLK_DIVIDE_REG = DIVCLK_DIVIDE;
reg [40:1] DIVCLK_EDGE_REG = DIVCLK_EDGE;
reg [31:0] DIVCLK_HT_REG = DIVCLK_HT;
reg [31:0] DIVCLK_LT_REG = DIVCLK_LT;
reg [40:1] DIVCLK_NOCOUNT_REG = DIVCLK_NOCOUNT;
reg [40:1] EN_SYNC_CK_TEST_REG = EN_SYNC_CK_TEST;
reg [40:1] EN_TESTIN_REG = EN_TESTIN;
reg [40:1] EN_VCO_DIV1_REG = EN_VCO_DIV1;
reg [40:1] EN_VCO_DIV6_REG = EN_VCO_DIV6;
reg [40:1] FRACT_TEST_EN_REG = FRACT_TEST_EN;
reg [2:0] FRACT_TEST_SEL_REG = FRACT_TEST_SEL;
reg [1:0] FREQ_COMP_REG = FREQ_COMP;
reg [31:0] HVLF_CNT_TEST_REG = HVLF_CNT_TEST;
reg [40:1] HVLF_CNT_TEST_EN_REG = HVLF_CNT_TEST_EN;
reg [1:0] INTERP0_SEL_REG = INTERP0_SEL;
reg [31:0] INTERP0_SKEW_REG = INTERP0_SKEW;
reg [1:0] INTERP1_SEL_REG = INTERP1_SEL;
reg [31:0] INTERP1_SKEW_REG = INTERP1_SKEW;
reg [1:0] INTERP2_SEL_REG = INTERP2_SEL;
reg [31:0] INTERP2_SKEW_REG = INTERP2_SKEW;
reg [1:0] INTERP3_SEL_REG = INTERP3_SEL;
reg [31:0] INTERP3_SKEW_REG = INTERP3_SKEW;
reg [1:0] INTERP4_SEL_REG = INTERP4_SEL;
reg [31:0] INTERP4_SKEW_REG = INTERP4_SKEW;
reg [1:0] INTERP5_SEL_REG = INTERP5_SEL;
reg [31:0] INTERP5_SKEW_REG = INTERP5_SKEW;
reg [1:0] INTERP6_SEL_REG = INTERP6_SEL;
reg [31:0] INTERP6_SKEW_REG = INTERP6_SKEW;
reg [1:0] INTERPFB_SEL_REG = INTERPFB_SEL;
reg [31:0] INTERPFB_SKEW_REG = INTERPFB_SKEW;
reg IS_CLKFBIN_INVERTED_REG = IS_CLKFBIN_INVERTED;
reg IS_CLKIN1_INVERTED_REG = IS_CLKIN1_INVERTED;
reg IS_CLKIN2_INVERTED_REG = IS_CLKIN2_INVERTED;
reg IS_CLKINSEL_INVERTED_REG = IS_CLKINSEL_INVERTED;
reg IS_PSEN_INVERTED_REG = IS_PSEN_INVERTED;
reg IS_PSINCDEC_INVERTED_REG = IS_PSINCDEC_INVERTED;
reg IS_PWRDWN_INVERTED_REG = IS_PWRDWN_INVERTED;
reg IS_RST_INVERTED_REG = IS_RST_INVERTED;
reg [1:0] LFHF_REG = LFHF;
reg [40:1] LF_LOW_SEL_REG = LF_LOW_SEL;
reg [1:0] LF_NEN_REG = LF_NEN;
reg [1:0] LF_PEN_REG = LF_PEN;
reg [31:0] LOCK_CNT_REG = LOCK_CNT;
reg [31:0] LOCK_FB_DLY_REG = LOCK_FB_DLY;
reg [31:0] LOCK_REF_DLY_REG = LOCK_REF_DLY;
reg [31:0] LOCK_SAT_HIGH_REG = LOCK_SAT_HIGH;
reg [2:0] MAN_LF_REG = MAN_LF;
reg [40:1] MMCM_EN_REG = MMCM_EN;
reg [6:0] PFD_REG = PFD;
reg [40:1] PFD_STARTUP_REG = PFD_STARTUP;
real REF_JITTER1_REG = REF_JITTER1;
real REF_JITTER2_REG = REF_JITTER2;
reg [3:0] RES_REG = RES;
reg [4:0] SPARE_DIGITAL_REG = SPARE_DIGITAL;
reg [40:1] SS_EN_REG = SS_EN;
reg [88:1] SS_MODE_REG = SS_MODE;
reg [31:0] SS_MOD_PERIOD_REG = SS_MOD_PERIOD;
reg [2:0] SS_STEPS_REG = SS_STEPS;
reg [2:0] SS_STEPS_INIT_REG = SS_STEPS_INIT;
reg [40:1] SUP_SEL_AREG_REG = SUP_SEL_AREG;
reg [40:1] SUP_SEL_MVDD_REG = SUP_SEL_MVDD;
reg [40:1] SUP_SEL_VBG_REG = SUP_SEL_VBG;
reg [40:1] SUP_SEL_VCCAUX_REG = SUP_SEL_VCCAUX;
reg [40:1] SUP_SEL_VCCINT_REG = SUP_SEL_VCCINT;
reg [1:0] SYNTH_CLK_DIV_REG = SYNTH_CLK_DIV;
reg [5:0] TESTOUT0_MUX_SEL_REG = TESTOUT0_MUX_SEL;
reg [5:0] TESTOUT1_MUX_SEL_REG = TESTOUT1_MUX_SEL;
reg [5:0] TESTOUT2_MUX_SEL_REG = TESTOUT2_MUX_SEL;
reg [5:0] TESTOUT3_MUX_SEL_REG = TESTOUT3_MUX_SEL;
reg [1:0] TMUX_MUX_SEL_REG = TMUX_MUX_SEL;
reg [31:0] UNLOCK_CNT_REG = UNLOCK_CNT;
reg [40:1] VCO_BYPASS_REG = VCO_BYPASS;
reg [40:1] VCO_GATE_CCI_B_REG = VCO_GATE_CCI_B;
reg [40:1] VCO_HIGH_RANGE_EN_REG = VCO_HIGH_RANGE_EN;
reg [40:1] VCO_KICK_DISABLE_REG = VCO_KICK_DISABLE;
reg [40:1] VCO_STARTUP_ADJ_REG = VCO_STARTUP_ADJ;
reg [40:1] VCO_STARTUP_ALT_EN_REG = VCO_STARTUP_ALT_EN;
reg [40:1] VCO_STARTUP_HYST_DISABLE_REG = VCO_STARTUP_HYST_DISABLE;
reg [40:1] VLF_HIGH_DIS_B_REG = VLF_HIGH_DIS_B;
reg [40:1] VLF_HIGH_PWDN_B_REG = VLF_HIGH_PWDN_B;
reg [40:1] VLF_HIGH_REF_SEL_REG = VLF_HIGH_REF_SEL;
reg [1:0] VLF_HIGH_SEL_REG = VLF_HIGH_SEL;
reg [40:1] VLF_VALID_PWDN_REG = VLF_VALID_PWDN;
reg [2:0] VLF_VALID_SEL_REG = VLF_VALID_SEL;

initial begin
  ATTR[`MMCME5_TEST__ANALOG_MISC] = ANALOG_MISC;
  ATTR[`MMCME5_TEST__AVDD_COMP_SET] = AVDD_COMP_SET;
  ATTR[`MMCME5_TEST__AVDD_VBG_PD] = AVDD_VBG_PD;
  ATTR[`MMCME5_TEST__AVDD_VBG_SEL] = AVDD_VBG_SEL;
  ATTR[`MMCME5_TEST__BANDWIDTH] = BANDWIDTH;
  ATTR[`MMCME5_TEST__CLKBURST_CNT] = CLKBURST_CNT;
  ATTR[`MMCME5_TEST__CLKBURST_ENABLE] = CLKBURST_ENABLE;
  ATTR[`MMCME5_TEST__CLKBURST_REPEAT] = CLKBURST_REPEAT;
  ATTR[`MMCME5_TEST__CLKFBIN_EDGE] = CLKFBIN_EDGE;
  ATTR[`MMCME5_TEST__CLKFBIN_HT] = CLKFBIN_HT;
  ATTR[`MMCME5_TEST__CLKFBIN_LT] = CLKFBIN_LT;
  ATTR[`MMCME5_TEST__CLKFBIN_MULT] = CLKFBIN_MULT;
  ATTR[`MMCME5_TEST__CLKFBIN_NOCOUNT] = CLKFBIN_NOCOUNT;
  ATTR[`MMCME5_TEST__CLKFBOUT_DT] = CLKFBOUT_DT;
  ATTR[`MMCME5_TEST__CLKFBOUT_EDGE] = CLKFBOUT_EDGE;
  ATTR[`MMCME5_TEST__CLKFBOUT_EN] = CLKFBOUT_EN;
  ATTR[`MMCME5_TEST__CLKFBOUT_FRACT] = CLKFBOUT_FRACT;
  ATTR[`MMCME5_TEST__CLKFBOUT_FRACT_ALG] = CLKFBOUT_FRACT_ALG;
  ATTR[`MMCME5_TEST__CLKFBOUT_FRACT_EN] = CLKFBOUT_FRACT_EN;
  ATTR[`MMCME5_TEST__CLKFBOUT_FRACT_ORDER] = CLKFBOUT_FRACT_ORDER;
  ATTR[`MMCME5_TEST__CLKFBOUT_FRACT_SEED] = CLKFBOUT_FRACT_SEED;
  ATTR[`MMCME5_TEST__CLKFBOUT_HT] = CLKFBOUT_HT;
  ATTR[`MMCME5_TEST__CLKFBOUT_LT] = CLKFBOUT_LT;
  ATTR[`MMCME5_TEST__CLKFBOUT_MULT] = CLKFBOUT_MULT;
  ATTR[`MMCME5_TEST__CLKFBOUT_MX] = CLKFBOUT_MX;
  ATTR[`MMCME5_TEST__CLKFBOUT_NOCOUNT] = CLKFBOUT_NOCOUNT;
  ATTR[`MMCME5_TEST__CLKFBOUT_PHASE] = $realtobits(CLKFBOUT_PHASE);
  ATTR[`MMCME5_TEST__CLKFBOUT_PREDIV2] = CLKFBOUT_PREDIV2;
  ATTR[`MMCME5_TEST__CLKIN1_PERIOD] = $realtobits(CLKIN1_PERIOD);
  ATTR[`MMCME5_TEST__CLKIN2_PERIOD] = $realtobits(CLKIN2_PERIOD);
  ATTR[`MMCME5_TEST__CLKOUT0_DIVIDE] = CLKOUT0_DIVIDE;
  ATTR[`MMCME5_TEST__CLKOUT0_DT] = CLKOUT0_DT;
  ATTR[`MMCME5_TEST__CLKOUT0_DUTY_CYCLE] = $realtobits(CLKOUT0_DUTY_CYCLE);
  ATTR[`MMCME5_TEST__CLKOUT0_EDGE] = CLKOUT0_EDGE;
  ATTR[`MMCME5_TEST__CLKOUT0_HT] = CLKOUT0_HT;
  ATTR[`MMCME5_TEST__CLKOUT0_LT] = CLKOUT0_LT;
  ATTR[`MMCME5_TEST__CLKOUT0_MX] = CLKOUT0_MX;
  ATTR[`MMCME5_TEST__CLKOUT0_NOCOUNT] = CLKOUT0_NOCOUNT;
  ATTR[`MMCME5_TEST__CLKOUT0_PHASE] = $realtobits(CLKOUT0_PHASE);
  ATTR[`MMCME5_TEST__CLKOUT0_PREDIV2] = CLKOUT0_PREDIV2;
  ATTR[`MMCME5_TEST__CLKOUT1_DIVIDE] = CLKOUT1_DIVIDE;
  ATTR[`MMCME5_TEST__CLKOUT1_DT] = CLKOUT1_DT;
  ATTR[`MMCME5_TEST__CLKOUT1_DUTY_CYCLE] = $realtobits(CLKOUT1_DUTY_CYCLE);
  ATTR[`MMCME5_TEST__CLKOUT1_EDGE] = CLKOUT1_EDGE;
  ATTR[`MMCME5_TEST__CLKOUT1_HT] = CLKOUT1_HT;
  ATTR[`MMCME5_TEST__CLKOUT1_LT] = CLKOUT1_LT;
  ATTR[`MMCME5_TEST__CLKOUT1_MX] = CLKOUT1_MX;
  ATTR[`MMCME5_TEST__CLKOUT1_NOCOUNT] = CLKOUT1_NOCOUNT;
  ATTR[`MMCME5_TEST__CLKOUT1_PHASE] = $realtobits(CLKOUT1_PHASE);
  ATTR[`MMCME5_TEST__CLKOUT1_PREDIV2] = CLKOUT1_PREDIV2;
  ATTR[`MMCME5_TEST__CLKOUT2_DIVIDE] = CLKOUT2_DIVIDE;
  ATTR[`MMCME5_TEST__CLKOUT2_DT] = CLKOUT2_DT;
  ATTR[`MMCME5_TEST__CLKOUT2_DUTY_CYCLE] = $realtobits(CLKOUT2_DUTY_CYCLE);
  ATTR[`MMCME5_TEST__CLKOUT2_EDGE] = CLKOUT2_EDGE;
  ATTR[`MMCME5_TEST__CLKOUT2_HT] = CLKOUT2_HT;
  ATTR[`MMCME5_TEST__CLKOUT2_LT] = CLKOUT2_LT;
  ATTR[`MMCME5_TEST__CLKOUT2_MX] = CLKOUT2_MX;
  ATTR[`MMCME5_TEST__CLKOUT2_NOCOUNT] = CLKOUT2_NOCOUNT;
  ATTR[`MMCME5_TEST__CLKOUT2_PHASE] = $realtobits(CLKOUT2_PHASE);
  ATTR[`MMCME5_TEST__CLKOUT2_PREDIV2] = CLKOUT2_PREDIV2;
  ATTR[`MMCME5_TEST__CLKOUT3_DIVIDE] = CLKOUT3_DIVIDE;
  ATTR[`MMCME5_TEST__CLKOUT3_DT] = CLKOUT3_DT;
  ATTR[`MMCME5_TEST__CLKOUT3_DUTY_CYCLE] = $realtobits(CLKOUT3_DUTY_CYCLE);
  ATTR[`MMCME5_TEST__CLKOUT3_EDGE] = CLKOUT3_EDGE;
  ATTR[`MMCME5_TEST__CLKOUT3_HT] = CLKOUT3_HT;
  ATTR[`MMCME5_TEST__CLKOUT3_LT] = CLKOUT3_LT;
  ATTR[`MMCME5_TEST__CLKOUT3_MX] = CLKOUT3_MX;
  ATTR[`MMCME5_TEST__CLKOUT3_NOCOUNT] = CLKOUT3_NOCOUNT;
  ATTR[`MMCME5_TEST__CLKOUT3_PHASE] = $realtobits(CLKOUT3_PHASE);
  ATTR[`MMCME5_TEST__CLKOUT3_PREDIV2] = CLKOUT3_PREDIV2;
  ATTR[`MMCME5_TEST__CLKOUT4_DIVIDE] = CLKOUT4_DIVIDE;
  ATTR[`MMCME5_TEST__CLKOUT4_DT] = CLKOUT4_DT;
  ATTR[`MMCME5_TEST__CLKOUT4_DUTY_CYCLE] = $realtobits(CLKOUT4_DUTY_CYCLE);
  ATTR[`MMCME5_TEST__CLKOUT4_EDGE] = CLKOUT4_EDGE;
  ATTR[`MMCME5_TEST__CLKOUT4_HT] = CLKOUT4_HT;
  ATTR[`MMCME5_TEST__CLKOUT4_LT] = CLKOUT4_LT;
  ATTR[`MMCME5_TEST__CLKOUT4_MX] = CLKOUT4_MX;
  ATTR[`MMCME5_TEST__CLKOUT4_NOCOUNT] = CLKOUT4_NOCOUNT;
  ATTR[`MMCME5_TEST__CLKOUT4_PHASE] = $realtobits(CLKOUT4_PHASE);
  ATTR[`MMCME5_TEST__CLKOUT4_PREDIV2] = CLKOUT4_PREDIV2;
  ATTR[`MMCME5_TEST__CLKOUT5_DIVIDE] = CLKOUT5_DIVIDE;
  ATTR[`MMCME5_TEST__CLKOUT5_DT] = CLKOUT5_DT;
  ATTR[`MMCME5_TEST__CLKOUT5_DUTY_CYCLE] = $realtobits(CLKOUT5_DUTY_CYCLE);
  ATTR[`MMCME5_TEST__CLKOUT5_EDGE] = CLKOUT5_EDGE;
  ATTR[`MMCME5_TEST__CLKOUT5_HT] = CLKOUT5_HT;
  ATTR[`MMCME5_TEST__CLKOUT5_LT] = CLKOUT5_LT;
  ATTR[`MMCME5_TEST__CLKOUT5_MX] = CLKOUT5_MX;
  ATTR[`MMCME5_TEST__CLKOUT5_NOCOUNT] = CLKOUT5_NOCOUNT;
  ATTR[`MMCME5_TEST__CLKOUT5_PHASE] = $realtobits(CLKOUT5_PHASE);
  ATTR[`MMCME5_TEST__CLKOUT5_PREDIV2] = CLKOUT5_PREDIV2;
  ATTR[`MMCME5_TEST__CLKOUT6_DIVIDE] = CLKOUT6_DIVIDE;
  ATTR[`MMCME5_TEST__CLKOUT6_DT] = CLKOUT6_DT;
  ATTR[`MMCME5_TEST__CLKOUT6_DUTY_CYCLE] = $realtobits(CLKOUT6_DUTY_CYCLE);
  ATTR[`MMCME5_TEST__CLKOUT6_EDGE] = CLKOUT6_EDGE;
  ATTR[`MMCME5_TEST__CLKOUT6_HT] = CLKOUT6_HT;
  ATTR[`MMCME5_TEST__CLKOUT6_LT] = CLKOUT6_LT;
  ATTR[`MMCME5_TEST__CLKOUT6_MX] = CLKOUT6_MX;
  ATTR[`MMCME5_TEST__CLKOUT6_NOCOUNT] = CLKOUT6_NOCOUNT;
  ATTR[`MMCME5_TEST__CLKOUT6_PHASE] = $realtobits(CLKOUT6_PHASE);
  ATTR[`MMCME5_TEST__CLKOUT6_PREDIV2] = CLKOUT6_PREDIV2;
  ATTR[`MMCME5_TEST__COMPENSATION] = COMPENSATION;
  ATTR[`MMCME5_TEST__CONTROL_0] = CONTROL_0;
  ATTR[`MMCME5_TEST__CONTROL_1] = CONTROL_1;
  ATTR[`MMCME5_TEST__CONTROL_2] = CONTROL_2;
  ATTR[`MMCME5_TEST__CONTROL_3] = CONTROL_3;
  ATTR[`MMCME5_TEST__CONTROL_4] = CONTROL_4;
  ATTR[`MMCME5_TEST__CONTROL_5] = CONTROL_5;
  ATTR[`MMCME5_TEST__CONTROL_6] = CONTROL_6;
  ATTR[`MMCME5_TEST__CONTROL_7] = CONTROL_7;
  ATTR[`MMCME5_TEST__CP] = CP;
  ATTR[`MMCME5_TEST__CP_BIAS_TRIP_SET] = CP_BIAS_TRIP_SET;
  ATTR[`MMCME5_TEST__CP_RES] = CP_RES;
  ATTR[`MMCME5_TEST__DESKEW_DLY] = DESKEW_DLY;
  ATTR[`MMCME5_TEST__DESKEW_DLY_EN] = DESKEW_DLY_EN;
  ATTR[`MMCME5_TEST__DESKEW_DLY_PATH] = DESKEW_DLY_PATH;
  ATTR[`MMCME5_TEST__DESKEW_EN] = DESKEW_EN;
  ATTR[`MMCME5_TEST__DIRECT_PATH_CNTRL] = DIRECT_PATH_CNTRL;
  ATTR[`MMCME5_TEST__DIVCLK_DIVIDE] = DIVCLK_DIVIDE;
  ATTR[`MMCME5_TEST__DIVCLK_EDGE] = DIVCLK_EDGE;
  ATTR[`MMCME5_TEST__DIVCLK_HT] = DIVCLK_HT;
  ATTR[`MMCME5_TEST__DIVCLK_LT] = DIVCLK_LT;
  ATTR[`MMCME5_TEST__DIVCLK_NOCOUNT] = DIVCLK_NOCOUNT;
  ATTR[`MMCME5_TEST__EN_SYNC_CK_TEST] = EN_SYNC_CK_TEST;
  ATTR[`MMCME5_TEST__EN_TESTIN] = EN_TESTIN;
  ATTR[`MMCME5_TEST__EN_VCO_DIV1] = EN_VCO_DIV1;
  ATTR[`MMCME5_TEST__EN_VCO_DIV6] = EN_VCO_DIV6;
  ATTR[`MMCME5_TEST__FRACT_TEST_EN] = FRACT_TEST_EN;
  ATTR[`MMCME5_TEST__FRACT_TEST_SEL] = FRACT_TEST_SEL;
  ATTR[`MMCME5_TEST__FREQ_COMP] = FREQ_COMP;
  ATTR[`MMCME5_TEST__HVLF_CNT_TEST] = HVLF_CNT_TEST;
  ATTR[`MMCME5_TEST__HVLF_CNT_TEST_EN] = HVLF_CNT_TEST_EN;
  ATTR[`MMCME5_TEST__INTERP0_SEL] = INTERP0_SEL;
  ATTR[`MMCME5_TEST__INTERP0_SKEW] = INTERP0_SKEW;
  ATTR[`MMCME5_TEST__INTERP1_SEL] = INTERP1_SEL;
  ATTR[`MMCME5_TEST__INTERP1_SKEW] = INTERP1_SKEW;
  ATTR[`MMCME5_TEST__INTERP2_SEL] = INTERP2_SEL;
  ATTR[`MMCME5_TEST__INTERP2_SKEW] = INTERP2_SKEW;
  ATTR[`MMCME5_TEST__INTERP3_SEL] = INTERP3_SEL;
  ATTR[`MMCME5_TEST__INTERP3_SKEW] = INTERP3_SKEW;
  ATTR[`MMCME5_TEST__INTERP4_SEL] = INTERP4_SEL;
  ATTR[`MMCME5_TEST__INTERP4_SKEW] = INTERP4_SKEW;
  ATTR[`MMCME5_TEST__INTERP5_SEL] = INTERP5_SEL;
  ATTR[`MMCME5_TEST__INTERP5_SKEW] = INTERP5_SKEW;
  ATTR[`MMCME5_TEST__INTERP6_SEL] = INTERP6_SEL;
  ATTR[`MMCME5_TEST__INTERP6_SKEW] = INTERP6_SKEW;
  ATTR[`MMCME5_TEST__INTERPFB_SEL] = INTERPFB_SEL;
  ATTR[`MMCME5_TEST__INTERPFB_SKEW] = INTERPFB_SKEW;
  ATTR[`MMCME5_TEST__IS_CLKFBIN_INVERTED] = IS_CLKFBIN_INVERTED;
  ATTR[`MMCME5_TEST__IS_CLKIN1_INVERTED] = IS_CLKIN1_INVERTED;
  ATTR[`MMCME5_TEST__IS_CLKIN2_INVERTED] = IS_CLKIN2_INVERTED;
  ATTR[`MMCME5_TEST__IS_CLKINSEL_INVERTED] = IS_CLKINSEL_INVERTED;
  ATTR[`MMCME5_TEST__IS_PSEN_INVERTED] = IS_PSEN_INVERTED;
  ATTR[`MMCME5_TEST__IS_PSINCDEC_INVERTED] = IS_PSINCDEC_INVERTED;
  ATTR[`MMCME5_TEST__IS_PWRDWN_INVERTED] = IS_PWRDWN_INVERTED;
  ATTR[`MMCME5_TEST__IS_RST_INVERTED] = IS_RST_INVERTED;
  ATTR[`MMCME5_TEST__LFHF] = LFHF;
  ATTR[`MMCME5_TEST__LF_LOW_SEL] = LF_LOW_SEL;
  ATTR[`MMCME5_TEST__LF_NEN] = LF_NEN;
  ATTR[`MMCME5_TEST__LF_PEN] = LF_PEN;
  ATTR[`MMCME5_TEST__LOCK_CNT] = LOCK_CNT;
  ATTR[`MMCME5_TEST__LOCK_FB_DLY] = LOCK_FB_DLY;
  ATTR[`MMCME5_TEST__LOCK_REF_DLY] = LOCK_REF_DLY;
  ATTR[`MMCME5_TEST__LOCK_SAT_HIGH] = LOCK_SAT_HIGH;
  ATTR[`MMCME5_TEST__MAN_LF] = MAN_LF;
  ATTR[`MMCME5_TEST__MMCM_EN] = MMCM_EN;
  ATTR[`MMCME5_TEST__PFD] = PFD;
  ATTR[`MMCME5_TEST__PFD_STARTUP] = PFD_STARTUP;
  ATTR[`MMCME5_TEST__REF_JITTER1] = $realtobits(REF_JITTER1);
  ATTR[`MMCME5_TEST__REF_JITTER2] = $realtobits(REF_JITTER2);
  ATTR[`MMCME5_TEST__RES] = RES;
  ATTR[`MMCME5_TEST__SPARE_DIGITAL] = SPARE_DIGITAL;
  ATTR[`MMCME5_TEST__SS_EN] = SS_EN;
  ATTR[`MMCME5_TEST__SS_MODE] = SS_MODE;
  ATTR[`MMCME5_TEST__SS_MOD_PERIOD] = SS_MOD_PERIOD;
  ATTR[`MMCME5_TEST__SS_STEPS] = SS_STEPS;
  ATTR[`MMCME5_TEST__SS_STEPS_INIT] = SS_STEPS_INIT;
  ATTR[`MMCME5_TEST__SUP_SEL_AREG] = SUP_SEL_AREG;
  ATTR[`MMCME5_TEST__SUP_SEL_MVDD] = SUP_SEL_MVDD;
  ATTR[`MMCME5_TEST__SUP_SEL_VBG] = SUP_SEL_VBG;
  ATTR[`MMCME5_TEST__SUP_SEL_VCCAUX] = SUP_SEL_VCCAUX;
  ATTR[`MMCME5_TEST__SUP_SEL_VCCINT] = SUP_SEL_VCCINT;
  ATTR[`MMCME5_TEST__SYNTH_CLK_DIV] = SYNTH_CLK_DIV;
  ATTR[`MMCME5_TEST__TESTOUT0_MUX_SEL] = TESTOUT0_MUX_SEL;
  ATTR[`MMCME5_TEST__TESTOUT1_MUX_SEL] = TESTOUT1_MUX_SEL;
  ATTR[`MMCME5_TEST__TESTOUT2_MUX_SEL] = TESTOUT2_MUX_SEL;
  ATTR[`MMCME5_TEST__TESTOUT3_MUX_SEL] = TESTOUT3_MUX_SEL;
  ATTR[`MMCME5_TEST__TMUX_MUX_SEL] = TMUX_MUX_SEL;
  ATTR[`MMCME5_TEST__UNLOCK_CNT] = UNLOCK_CNT;
  ATTR[`MMCME5_TEST__VCO_BYPASS] = VCO_BYPASS;
  ATTR[`MMCME5_TEST__VCO_GATE_CCI_B] = VCO_GATE_CCI_B;
  ATTR[`MMCME5_TEST__VCO_HIGH_RANGE_EN] = VCO_HIGH_RANGE_EN;
  ATTR[`MMCME5_TEST__VCO_KICK_DISABLE] = VCO_KICK_DISABLE;
  ATTR[`MMCME5_TEST__VCO_STARTUP_ADJ] = VCO_STARTUP_ADJ;
  ATTR[`MMCME5_TEST__VCO_STARTUP_ALT_EN] = VCO_STARTUP_ALT_EN;
  ATTR[`MMCME5_TEST__VCO_STARTUP_HYST_DISABLE] = VCO_STARTUP_HYST_DISABLE;
  ATTR[`MMCME5_TEST__VLF_HIGH_DIS_B] = VLF_HIGH_DIS_B;
  ATTR[`MMCME5_TEST__VLF_HIGH_PWDN_B] = VLF_HIGH_PWDN_B;
  ATTR[`MMCME5_TEST__VLF_HIGH_REF_SEL] = VLF_HIGH_REF_SEL;
  ATTR[`MMCME5_TEST__VLF_HIGH_SEL] = VLF_HIGH_SEL;
  ATTR[`MMCME5_TEST__VLF_VALID_PWDN] = VLF_VALID_PWDN;
  ATTR[`MMCME5_TEST__VLF_VALID_SEL] = VLF_VALID_SEL;
end

always @(trig_attr) begin
  ANALOG_MISC_REG = ATTR[`MMCME5_TEST__ANALOG_MISC];
  AVDD_COMP_SET_REG = ATTR[`MMCME5_TEST__AVDD_COMP_SET];
  AVDD_VBG_PD_REG = ATTR[`MMCME5_TEST__AVDD_VBG_PD];
  AVDD_VBG_SEL_REG = ATTR[`MMCME5_TEST__AVDD_VBG_SEL];
  BANDWIDTH_REG = ATTR[`MMCME5_TEST__BANDWIDTH];
  CLKBURST_CNT_REG = ATTR[`MMCME5_TEST__CLKBURST_CNT];
  CLKBURST_ENABLE_REG = ATTR[`MMCME5_TEST__CLKBURST_ENABLE];
  CLKBURST_REPEAT_REG = ATTR[`MMCME5_TEST__CLKBURST_REPEAT];
  CLKFBIN_EDGE_REG = ATTR[`MMCME5_TEST__CLKFBIN_EDGE];
  CLKFBIN_HT_REG = ATTR[`MMCME5_TEST__CLKFBIN_HT];
  CLKFBIN_LT_REG = ATTR[`MMCME5_TEST__CLKFBIN_LT];
  CLKFBIN_MULT_REG = ATTR[`MMCME5_TEST__CLKFBIN_MULT];
  CLKFBIN_NOCOUNT_REG = ATTR[`MMCME5_TEST__CLKFBIN_NOCOUNT];
  CLKFBOUT_DT_REG = ATTR[`MMCME5_TEST__CLKFBOUT_DT];
  CLKFBOUT_EDGE_REG = ATTR[`MMCME5_TEST__CLKFBOUT_EDGE];
  CLKFBOUT_EN_REG = ATTR[`MMCME5_TEST__CLKFBOUT_EN];
  CLKFBOUT_FRACT_ALG_REG = ATTR[`MMCME5_TEST__CLKFBOUT_FRACT_ALG];
  CLKFBOUT_FRACT_EN_REG = ATTR[`MMCME5_TEST__CLKFBOUT_FRACT_EN];
  CLKFBOUT_FRACT_ORDER_REG = ATTR[`MMCME5_TEST__CLKFBOUT_FRACT_ORDER];
  CLKFBOUT_FRACT_REG = ATTR[`MMCME5_TEST__CLKFBOUT_FRACT];
  CLKFBOUT_FRACT_SEED_REG = ATTR[`MMCME5_TEST__CLKFBOUT_FRACT_SEED];
  CLKFBOUT_HT_REG = ATTR[`MMCME5_TEST__CLKFBOUT_HT];
  CLKFBOUT_LT_REG = ATTR[`MMCME5_TEST__CLKFBOUT_LT];
  CLKFBOUT_MULT_REG = ATTR[`MMCME5_TEST__CLKFBOUT_MULT];
  CLKFBOUT_MX_REG = ATTR[`MMCME5_TEST__CLKFBOUT_MX];
  CLKFBOUT_NOCOUNT_REG = ATTR[`MMCME5_TEST__CLKFBOUT_NOCOUNT];
  CLKFBOUT_PHASE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKFBOUT_PHASE]);
  CLKFBOUT_PREDIV2_REG = ATTR[`MMCME5_TEST__CLKFBOUT_PREDIV2];
  CLKIN1_PERIOD_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKIN1_PERIOD]);
  CLKIN2_PERIOD_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKIN2_PERIOD]);
  CLKOUT0_DIVIDE_REG = ATTR[`MMCME5_TEST__CLKOUT0_DIVIDE];
  CLKOUT0_DT_REG = ATTR[`MMCME5_TEST__CLKOUT0_DT];
  CLKOUT0_DUTY_CYCLE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT0_DUTY_CYCLE]);
  CLKOUT0_EDGE_REG = ATTR[`MMCME5_TEST__CLKOUT0_EDGE];
  CLKOUT0_HT_REG = ATTR[`MMCME5_TEST__CLKOUT0_HT];
  CLKOUT0_LT_REG = ATTR[`MMCME5_TEST__CLKOUT0_LT];
  CLKOUT0_MX_REG = ATTR[`MMCME5_TEST__CLKOUT0_MX];
  CLKOUT0_NOCOUNT_REG = ATTR[`MMCME5_TEST__CLKOUT0_NOCOUNT];
  CLKOUT0_PHASE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT0_PHASE]);
  CLKOUT0_PREDIV2_REG = ATTR[`MMCME5_TEST__CLKOUT0_PREDIV2];
  CLKOUT1_DIVIDE_REG = ATTR[`MMCME5_TEST__CLKOUT1_DIVIDE];
  CLKOUT1_DT_REG = ATTR[`MMCME5_TEST__CLKOUT1_DT];
  CLKOUT1_DUTY_CYCLE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT1_DUTY_CYCLE]);
  CLKOUT1_EDGE_REG = ATTR[`MMCME5_TEST__CLKOUT1_EDGE];
  CLKOUT1_HT_REG = ATTR[`MMCME5_TEST__CLKOUT1_HT];
  CLKOUT1_LT_REG = ATTR[`MMCME5_TEST__CLKOUT1_LT];
  CLKOUT1_MX_REG = ATTR[`MMCME5_TEST__CLKOUT1_MX];
  CLKOUT1_NOCOUNT_REG = ATTR[`MMCME5_TEST__CLKOUT1_NOCOUNT];
  CLKOUT1_PHASE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT1_PHASE]);
  CLKOUT1_PREDIV2_REG = ATTR[`MMCME5_TEST__CLKOUT1_PREDIV2];
  CLKOUT2_DIVIDE_REG = ATTR[`MMCME5_TEST__CLKOUT2_DIVIDE];
  CLKOUT2_DT_REG = ATTR[`MMCME5_TEST__CLKOUT2_DT];
  CLKOUT2_DUTY_CYCLE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT2_DUTY_CYCLE]);
  CLKOUT2_EDGE_REG = ATTR[`MMCME5_TEST__CLKOUT2_EDGE];
  CLKOUT2_HT_REG = ATTR[`MMCME5_TEST__CLKOUT2_HT];
  CLKOUT2_LT_REG = ATTR[`MMCME5_TEST__CLKOUT2_LT];
  CLKOUT2_MX_REG = ATTR[`MMCME5_TEST__CLKOUT2_MX];
  CLKOUT2_NOCOUNT_REG = ATTR[`MMCME5_TEST__CLKOUT2_NOCOUNT];
  CLKOUT2_PHASE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT2_PHASE]);
  CLKOUT2_PREDIV2_REG = ATTR[`MMCME5_TEST__CLKOUT2_PREDIV2];
  CLKOUT3_DIVIDE_REG = ATTR[`MMCME5_TEST__CLKOUT3_DIVIDE];
  CLKOUT3_DT_REG = ATTR[`MMCME5_TEST__CLKOUT3_DT];
  CLKOUT3_DUTY_CYCLE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT3_DUTY_CYCLE]);
  CLKOUT3_EDGE_REG = ATTR[`MMCME5_TEST__CLKOUT3_EDGE];
  CLKOUT3_HT_REG = ATTR[`MMCME5_TEST__CLKOUT3_HT];
  CLKOUT3_LT_REG = ATTR[`MMCME5_TEST__CLKOUT3_LT];
  CLKOUT3_MX_REG = ATTR[`MMCME5_TEST__CLKOUT3_MX];
  CLKOUT3_NOCOUNT_REG = ATTR[`MMCME5_TEST__CLKOUT3_NOCOUNT];
  CLKOUT3_PHASE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT3_PHASE]);
  CLKOUT3_PREDIV2_REG = ATTR[`MMCME5_TEST__CLKOUT3_PREDIV2];
  CLKOUT4_DIVIDE_REG = ATTR[`MMCME5_TEST__CLKOUT4_DIVIDE];
  CLKOUT4_DT_REG = ATTR[`MMCME5_TEST__CLKOUT4_DT];
  CLKOUT4_DUTY_CYCLE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT4_DUTY_CYCLE]);
  CLKOUT4_EDGE_REG = ATTR[`MMCME5_TEST__CLKOUT4_EDGE];
  CLKOUT4_HT_REG = ATTR[`MMCME5_TEST__CLKOUT4_HT];
  CLKOUT4_LT_REG = ATTR[`MMCME5_TEST__CLKOUT4_LT];
  CLKOUT4_MX_REG = ATTR[`MMCME5_TEST__CLKOUT4_MX];
  CLKOUT4_NOCOUNT_REG = ATTR[`MMCME5_TEST__CLKOUT4_NOCOUNT];
  CLKOUT4_PHASE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT4_PHASE]);
  CLKOUT4_PREDIV2_REG = ATTR[`MMCME5_TEST__CLKOUT4_PREDIV2];
  CLKOUT5_DIVIDE_REG = ATTR[`MMCME5_TEST__CLKOUT5_DIVIDE];
  CLKOUT5_DT_REG = ATTR[`MMCME5_TEST__CLKOUT5_DT];
  CLKOUT5_DUTY_CYCLE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT5_DUTY_CYCLE]);
  CLKOUT5_EDGE_REG = ATTR[`MMCME5_TEST__CLKOUT5_EDGE];
  CLKOUT5_HT_REG = ATTR[`MMCME5_TEST__CLKOUT5_HT];
  CLKOUT5_LT_REG = ATTR[`MMCME5_TEST__CLKOUT5_LT];
  CLKOUT5_MX_REG = ATTR[`MMCME5_TEST__CLKOUT5_MX];
  CLKOUT5_NOCOUNT_REG = ATTR[`MMCME5_TEST__CLKOUT5_NOCOUNT];
  CLKOUT5_PHASE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT5_PHASE]);
  CLKOUT5_PREDIV2_REG = ATTR[`MMCME5_TEST__CLKOUT5_PREDIV2];
  CLKOUT6_DIVIDE_REG = ATTR[`MMCME5_TEST__CLKOUT6_DIVIDE];
  CLKOUT6_DT_REG = ATTR[`MMCME5_TEST__CLKOUT6_DT];
  CLKOUT6_DUTY_CYCLE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT6_DUTY_CYCLE]);
  CLKOUT6_EDGE_REG = ATTR[`MMCME5_TEST__CLKOUT6_EDGE];
  CLKOUT6_HT_REG = ATTR[`MMCME5_TEST__CLKOUT6_HT];
  CLKOUT6_LT_REG = ATTR[`MMCME5_TEST__CLKOUT6_LT];
  CLKOUT6_MX_REG = ATTR[`MMCME5_TEST__CLKOUT6_MX];
  CLKOUT6_NOCOUNT_REG = ATTR[`MMCME5_TEST__CLKOUT6_NOCOUNT];
  CLKOUT6_PHASE_REG = $bitstoreal(ATTR[`MMCME5_TEST__CLKOUT6_PHASE]);
  CLKOUT6_PREDIV2_REG = ATTR[`MMCME5_TEST__CLKOUT6_PREDIV2];
  COMPENSATION_REG = ATTR[`MMCME5_TEST__COMPENSATION];
  CONTROL_0_REG = ATTR[`MMCME5_TEST__CONTROL_0];
  CONTROL_1_REG = ATTR[`MMCME5_TEST__CONTROL_1];
  CONTROL_2_REG = ATTR[`MMCME5_TEST__CONTROL_2];
  CONTROL_3_REG = ATTR[`MMCME5_TEST__CONTROL_3];
  CONTROL_4_REG = ATTR[`MMCME5_TEST__CONTROL_4];
  CONTROL_5_REG = ATTR[`MMCME5_TEST__CONTROL_5];
  CONTROL_6_REG = ATTR[`MMCME5_TEST__CONTROL_6];
  CONTROL_7_REG = ATTR[`MMCME5_TEST__CONTROL_7];
  CP_BIAS_TRIP_SET_REG = ATTR[`MMCME5_TEST__CP_BIAS_TRIP_SET];
  CP_REG = ATTR[`MMCME5_TEST__CP];
  CP_RES_REG = ATTR[`MMCME5_TEST__CP_RES];
  DESKEW_DLY_EN_REG = ATTR[`MMCME5_TEST__DESKEW_DLY_EN];
  DESKEW_DLY_PATH_REG = ATTR[`MMCME5_TEST__DESKEW_DLY_PATH];
  DESKEW_DLY_REG = ATTR[`MMCME5_TEST__DESKEW_DLY];
  DESKEW_EN_REG = ATTR[`MMCME5_TEST__DESKEW_EN];
  DIRECT_PATH_CNTRL_REG = ATTR[`MMCME5_TEST__DIRECT_PATH_CNTRL];
  DIVCLK_DIVIDE_REG = ATTR[`MMCME5_TEST__DIVCLK_DIVIDE];
  DIVCLK_EDGE_REG = ATTR[`MMCME5_TEST__DIVCLK_EDGE];
  DIVCLK_HT_REG = ATTR[`MMCME5_TEST__DIVCLK_HT];
  DIVCLK_LT_REG = ATTR[`MMCME5_TEST__DIVCLK_LT];
  DIVCLK_NOCOUNT_REG = ATTR[`MMCME5_TEST__DIVCLK_NOCOUNT];
  EN_SYNC_CK_TEST_REG = ATTR[`MMCME5_TEST__EN_SYNC_CK_TEST];
  EN_TESTIN_REG = ATTR[`MMCME5_TEST__EN_TESTIN];
  EN_VCO_DIV1_REG = ATTR[`MMCME5_TEST__EN_VCO_DIV1];
  EN_VCO_DIV6_REG = ATTR[`MMCME5_TEST__EN_VCO_DIV6];
  FRACT_TEST_EN_REG = ATTR[`MMCME5_TEST__FRACT_TEST_EN];
  FRACT_TEST_SEL_REG = ATTR[`MMCME5_TEST__FRACT_TEST_SEL];
  FREQ_COMP_REG = ATTR[`MMCME5_TEST__FREQ_COMP];
  HVLF_CNT_TEST_EN_REG = ATTR[`MMCME5_TEST__HVLF_CNT_TEST_EN];
  HVLF_CNT_TEST_REG = ATTR[`MMCME5_TEST__HVLF_CNT_TEST];
  INTERP0_SEL_REG = ATTR[`MMCME5_TEST__INTERP0_SEL];
  INTERP0_SKEW_REG = ATTR[`MMCME5_TEST__INTERP0_SKEW];
  INTERP1_SEL_REG = ATTR[`MMCME5_TEST__INTERP1_SEL];
  INTERP1_SKEW_REG = ATTR[`MMCME5_TEST__INTERP1_SKEW];
  INTERP2_SEL_REG = ATTR[`MMCME5_TEST__INTERP2_SEL];
  INTERP2_SKEW_REG = ATTR[`MMCME5_TEST__INTERP2_SKEW];
  INTERP3_SEL_REG = ATTR[`MMCME5_TEST__INTERP3_SEL];
  INTERP3_SKEW_REG = ATTR[`MMCME5_TEST__INTERP3_SKEW];
  INTERP4_SEL_REG = ATTR[`MMCME5_TEST__INTERP4_SEL];
  INTERP4_SKEW_REG = ATTR[`MMCME5_TEST__INTERP4_SKEW];
  INTERP5_SEL_REG = ATTR[`MMCME5_TEST__INTERP5_SEL];
  INTERP5_SKEW_REG = ATTR[`MMCME5_TEST__INTERP5_SKEW];
  INTERP6_SEL_REG = ATTR[`MMCME5_TEST__INTERP6_SEL];
  INTERP6_SKEW_REG = ATTR[`MMCME5_TEST__INTERP6_SKEW];
  INTERPFB_SEL_REG = ATTR[`MMCME5_TEST__INTERPFB_SEL];
  INTERPFB_SKEW_REG = ATTR[`MMCME5_TEST__INTERPFB_SKEW];
  IS_CLKFBIN_INVERTED_REG = ATTR[`MMCME5_TEST__IS_CLKFBIN_INVERTED];
  IS_CLKIN1_INVERTED_REG = ATTR[`MMCME5_TEST__IS_CLKIN1_INVERTED];
  IS_CLKIN2_INVERTED_REG = ATTR[`MMCME5_TEST__IS_CLKIN2_INVERTED];
  IS_CLKINSEL_INVERTED_REG = ATTR[`MMCME5_TEST__IS_CLKINSEL_INVERTED];
  IS_PSEN_INVERTED_REG = ATTR[`MMCME5_TEST__IS_PSEN_INVERTED];
  IS_PSINCDEC_INVERTED_REG = ATTR[`MMCME5_TEST__IS_PSINCDEC_INVERTED];
  IS_PWRDWN_INVERTED_REG = ATTR[`MMCME5_TEST__IS_PWRDWN_INVERTED];
  IS_RST_INVERTED_REG = ATTR[`MMCME5_TEST__IS_RST_INVERTED];
  LFHF_REG = ATTR[`MMCME5_TEST__LFHF];
  LF_LOW_SEL_REG = ATTR[`MMCME5_TEST__LF_LOW_SEL];
  LF_NEN_REG = ATTR[`MMCME5_TEST__LF_NEN];
  LF_PEN_REG = ATTR[`MMCME5_TEST__LF_PEN];
  LOCK_CNT_REG = ATTR[`MMCME5_TEST__LOCK_CNT];
  LOCK_FB_DLY_REG = ATTR[`MMCME5_TEST__LOCK_FB_DLY];
  LOCK_REF_DLY_REG = ATTR[`MMCME5_TEST__LOCK_REF_DLY];
  LOCK_SAT_HIGH_REG = ATTR[`MMCME5_TEST__LOCK_SAT_HIGH];
  MAN_LF_REG = ATTR[`MMCME5_TEST__MAN_LF];
  MMCM_EN_REG = ATTR[`MMCME5_TEST__MMCM_EN];
  PFD_REG = ATTR[`MMCME5_TEST__PFD];
  PFD_STARTUP_REG = ATTR[`MMCME5_TEST__PFD_STARTUP];
  REF_JITTER1_REG = $bitstoreal(ATTR[`MMCME5_TEST__REF_JITTER1]);
  REF_JITTER2_REG = $bitstoreal(ATTR[`MMCME5_TEST__REF_JITTER2]);
  RES_REG = ATTR[`MMCME5_TEST__RES];
  SPARE_DIGITAL_REG = ATTR[`MMCME5_TEST__SPARE_DIGITAL];
  SS_EN_REG = ATTR[`MMCME5_TEST__SS_EN];
  SS_MODE_REG = ATTR[`MMCME5_TEST__SS_MODE];
  SS_MOD_PERIOD_REG = ATTR[`MMCME5_TEST__SS_MOD_PERIOD];
  SS_STEPS_INIT_REG = ATTR[`MMCME5_TEST__SS_STEPS_INIT];
  SS_STEPS_REG = ATTR[`MMCME5_TEST__SS_STEPS];
  SUP_SEL_AREG_REG = ATTR[`MMCME5_TEST__SUP_SEL_AREG];
  SUP_SEL_MVDD_REG = ATTR[`MMCME5_TEST__SUP_SEL_MVDD];
  SUP_SEL_VBG_REG = ATTR[`MMCME5_TEST__SUP_SEL_VBG];
  SUP_SEL_VCCAUX_REG = ATTR[`MMCME5_TEST__SUP_SEL_VCCAUX];
  SUP_SEL_VCCINT_REG = ATTR[`MMCME5_TEST__SUP_SEL_VCCINT];
  SYNTH_CLK_DIV_REG = ATTR[`MMCME5_TEST__SYNTH_CLK_DIV];
  TESTOUT0_MUX_SEL_REG = ATTR[`MMCME5_TEST__TESTOUT0_MUX_SEL];
  TESTOUT1_MUX_SEL_REG = ATTR[`MMCME5_TEST__TESTOUT1_MUX_SEL];
  TESTOUT2_MUX_SEL_REG = ATTR[`MMCME5_TEST__TESTOUT2_MUX_SEL];
  TESTOUT3_MUX_SEL_REG = ATTR[`MMCME5_TEST__TESTOUT3_MUX_SEL];
  TMUX_MUX_SEL_REG = ATTR[`MMCME5_TEST__TMUX_MUX_SEL];
  UNLOCK_CNT_REG = ATTR[`MMCME5_TEST__UNLOCK_CNT];
  VCO_BYPASS_REG = ATTR[`MMCME5_TEST__VCO_BYPASS];
  VCO_GATE_CCI_B_REG = ATTR[`MMCME5_TEST__VCO_GATE_CCI_B];
  VCO_HIGH_RANGE_EN_REG = ATTR[`MMCME5_TEST__VCO_HIGH_RANGE_EN];
  VCO_KICK_DISABLE_REG = ATTR[`MMCME5_TEST__VCO_KICK_DISABLE];
  VCO_STARTUP_ADJ_REG = ATTR[`MMCME5_TEST__VCO_STARTUP_ADJ];
  VCO_STARTUP_ALT_EN_REG = ATTR[`MMCME5_TEST__VCO_STARTUP_ALT_EN];
  VCO_STARTUP_HYST_DISABLE_REG = ATTR[`MMCME5_TEST__VCO_STARTUP_HYST_DISABLE];
  VLF_HIGH_DIS_B_REG = ATTR[`MMCME5_TEST__VLF_HIGH_DIS_B];
  VLF_HIGH_PWDN_B_REG = ATTR[`MMCME5_TEST__VLF_HIGH_PWDN_B];
  VLF_HIGH_REF_SEL_REG = ATTR[`MMCME5_TEST__VLF_HIGH_REF_SEL];
  VLF_HIGH_SEL_REG = ATTR[`MMCME5_TEST__VLF_HIGH_SEL];
  VLF_VALID_PWDN_REG = ATTR[`MMCME5_TEST__VLF_VALID_PWDN];
  VLF_VALID_SEL_REG = ATTR[`MMCME5_TEST__VLF_VALID_SEL];
end

// procedures to override, read attribute values

task write_attr;
  input  [`MMCME5_TEST_ADDR_SZ-1:0] addr;
  input  [`MMCME5_TEST_DATA_SZ-1:0] data;
  begin
    ATTR[addr] = data;
    trig_attr = ~trig_attr; // to be removed
  end
endtask

function [`MMCME5_TEST_DATA_SZ-1:0] read_attr;
  input  [`MMCME5_TEST_ADDR_SZ-1:0] addr;
  begin
    read_attr = ATTR[addr];
  end
endfunction

task commit_attr;
  begin
trig_attr = ~trig_attr;
  end
endtask
