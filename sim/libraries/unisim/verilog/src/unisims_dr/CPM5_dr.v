`include "B_CPM5_defines.vh"

reg [`CPM5_DATA_SZ-1:0] ATTR [0:`CPM5_ADDR_N-1];
reg [`CPM5__CLKDIV0_SZ-1:0] CLKDIV0_REG = CLKDIV0;
reg [`CPM5__CLKDIV1_SZ-1:0] CLKDIV1_REG = CLKDIV1;
reg [`CPM5__CPM5_DPLL0INT_DIVOUT_SZ-1:0] CPM5_DPLL0INT_DIVOUT_REG = CPM5_DPLL0INT_DIVOUT;
reg [`CPM5__CPM5_DPLL1INT_DIVOUT_SZ-1:0] CPM5_DPLL1INT_DIVOUT_REG = CPM5_DPLL1INT_DIVOUT;
reg [`CPM5__CPM5_MODE_0_SZ:1] CPM5_MODE_0_REG = CPM5_MODE_0;
reg [`CPM5__CPM5_MODE_1_SZ:1] CPM5_MODE_1_REG = CPM5_MODE_1;
reg [`CPM5__CXS0_MODE_SZ:1] CXS0_MODE_REG = CXS0_MODE;
reg [`CPM5__CXS1_MODE_SZ:1] CXS1_MODE_REG = CXS1_MODE;
reg [`CPM5__DPLL0_DESKEW_DELAY_SZ-1:0] DPLL0_DESKEW_DELAY_REG = DPLL0_DESKEW_DELAY;
reg [`CPM5__DPLL0_DESKEW_DELAY_EN_SZ:1] DPLL0_DESKEW_DELAY_EN_REG = DPLL0_DESKEW_DELAY_EN;
reg [`CPM5__DPLL0_DESKEW_DELAY_PATH_SZ:1] DPLL0_DESKEW_DELAY_PATH_REG = DPLL0_DESKEW_DELAY_PATH;
reg [`CPM5__DPLL0_DESKEW_EN_SZ:1] DPLL0_DESKEW_EN_REG = DPLL0_DESKEW_EN;
reg [`CPM5__DPLL1_DESKEW_DELAY_SZ-1:0] DPLL1_DESKEW_DELAY_REG = DPLL1_DESKEW_DELAY;
reg [`CPM5__DPLL1_DESKEW_DELAY_EN_SZ:1] DPLL1_DESKEW_DELAY_EN_REG = DPLL1_DESKEW_DELAY_EN;
reg [`CPM5__DPLL1_DESKEW_DELAY_PATH_SZ:1] DPLL1_DESKEW_DELAY_PATH_REG = DPLL1_DESKEW_DELAY_PATH;
reg [`CPM5__DPLL1_DESKEW_EN_SZ:1] DPLL1_DESKEW_EN_REG = DPLL1_DESKEW_EN;
reg [`CPM5__LINK_SPEED_0_SZ:1] LINK_SPEED_0_REG = LINK_SPEED_0;
reg [`CPM5__LINK_SPEED_1_SZ:1] LINK_SPEED_1_REG = LINK_SPEED_1;
reg [`CPM5__LINK_WIDTH_0_SZ-1:0] LINK_WIDTH_0_REG = LINK_WIDTH_0;
reg [`CPM5__LINK_WIDTH_1_SZ-1:0] LINK_WIDTH_1_REG = LINK_WIDTH_1;
reg [`CPM5__SIM_CPM_CDO_FILE_NAME_SZ:1] SIM_CPM_CDO_FILE_NAME_REG = SIM_CPM_CDO_FILE_NAME;

initial begin
  ATTR[`CPM5__CLKDIV0] = CLKDIV0;
  ATTR[`CPM5__CLKDIV1] = CLKDIV1;
  ATTR[`CPM5__CPM5_DPLL0INT_DIVOUT] = CPM5_DPLL0INT_DIVOUT;
  ATTR[`CPM5__CPM5_DPLL1INT_DIVOUT] = CPM5_DPLL1INT_DIVOUT;
  ATTR[`CPM5__CPM5_MODE_0] = CPM5_MODE_0;
  ATTR[`CPM5__CPM5_MODE_1] = CPM5_MODE_1;
  ATTR[`CPM5__CXS0_MODE] = CXS0_MODE;
  ATTR[`CPM5__CXS1_MODE] = CXS1_MODE;
  ATTR[`CPM5__DPLL0_DESKEW_DELAY] = DPLL0_DESKEW_DELAY;
  ATTR[`CPM5__DPLL0_DESKEW_DELAY_EN] = DPLL0_DESKEW_DELAY_EN;
  ATTR[`CPM5__DPLL0_DESKEW_DELAY_PATH] = DPLL0_DESKEW_DELAY_PATH;
  ATTR[`CPM5__DPLL0_DESKEW_EN] = DPLL0_DESKEW_EN;
  ATTR[`CPM5__DPLL1_DESKEW_DELAY] = DPLL1_DESKEW_DELAY;
  ATTR[`CPM5__DPLL1_DESKEW_DELAY_EN] = DPLL1_DESKEW_DELAY_EN;
  ATTR[`CPM5__DPLL1_DESKEW_DELAY_PATH] = DPLL1_DESKEW_DELAY_PATH;
  ATTR[`CPM5__DPLL1_DESKEW_EN] = DPLL1_DESKEW_EN;
  ATTR[`CPM5__LINK_SPEED_0] = LINK_SPEED_0;
  ATTR[`CPM5__LINK_SPEED_1] = LINK_SPEED_1;
  ATTR[`CPM5__LINK_WIDTH_0] = LINK_WIDTH_0;
  ATTR[`CPM5__LINK_WIDTH_1] = LINK_WIDTH_1;
  ATTR[`CPM5__SIM_CPM_CDO_FILE_NAME] = SIM_CPM_CDO_FILE_NAME;
end

always @(trig_attr) begin
  CLKDIV0_REG = ATTR[`CPM5__CLKDIV0];
  CLKDIV1_REG = ATTR[`CPM5__CLKDIV1];
  CPM5_DPLL0INT_DIVOUT_REG = ATTR[`CPM5__CPM5_DPLL0INT_DIVOUT];
  CPM5_DPLL1INT_DIVOUT_REG = ATTR[`CPM5__CPM5_DPLL1INT_DIVOUT];
  CPM5_MODE_0_REG = ATTR[`CPM5__CPM5_MODE_0];
  CPM5_MODE_1_REG = ATTR[`CPM5__CPM5_MODE_1];
  CXS0_MODE_REG = ATTR[`CPM5__CXS0_MODE];
  CXS1_MODE_REG = ATTR[`CPM5__CXS1_MODE];
  DPLL0_DESKEW_DELAY_EN_REG = ATTR[`CPM5__DPLL0_DESKEW_DELAY_EN];
  DPLL0_DESKEW_DELAY_PATH_REG = ATTR[`CPM5__DPLL0_DESKEW_DELAY_PATH];
  DPLL0_DESKEW_DELAY_REG = ATTR[`CPM5__DPLL0_DESKEW_DELAY];
  DPLL0_DESKEW_EN_REG = ATTR[`CPM5__DPLL0_DESKEW_EN];
  DPLL1_DESKEW_DELAY_EN_REG = ATTR[`CPM5__DPLL1_DESKEW_DELAY_EN];
  DPLL1_DESKEW_DELAY_PATH_REG = ATTR[`CPM5__DPLL1_DESKEW_DELAY_PATH];
  DPLL1_DESKEW_DELAY_REG = ATTR[`CPM5__DPLL1_DESKEW_DELAY];
  DPLL1_DESKEW_EN_REG = ATTR[`CPM5__DPLL1_DESKEW_EN];
  LINK_SPEED_0_REG = ATTR[`CPM5__LINK_SPEED_0];
  LINK_SPEED_1_REG = ATTR[`CPM5__LINK_SPEED_1];
  LINK_WIDTH_0_REG = ATTR[`CPM5__LINK_WIDTH_0];
  LINK_WIDTH_1_REG = ATTR[`CPM5__LINK_WIDTH_1];
  SIM_CPM_CDO_FILE_NAME_REG = ATTR[`CPM5__SIM_CPM_CDO_FILE_NAME];
end

// procedures to override, read attribute values

task write_attr;
  input  [`CPM5_ADDR_SZ-1:0] addr;
  input  [`CPM5_DATA_SZ-1:0] data;
  begin
    ATTR[addr] = data;
    trig_attr = ~trig_attr; // to be removed
  end
endtask

function [`CPM5_DATA_SZ-1:0] read_attr;
  input  [`CPM5_ADDR_SZ-1:0] addr;
  begin
    read_attr = ATTR[addr];
  end
endfunction

task commit_attr;
  begin
trig_attr = ~trig_attr;
  end
endtask
