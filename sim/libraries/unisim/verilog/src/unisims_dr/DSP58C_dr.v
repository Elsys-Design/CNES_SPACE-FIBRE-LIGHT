`include "B_DSP58C_defines.vh"

reg [`DSP58C_DATA_SZ-1:0] ATTR [0:`DSP58C_ADDR_N-1];
reg [`DSP58C__ACASCREG_SZ-1:0] ACASCREG_REG = ACASCREG;
reg [`DSP58C__ADREG_SZ-1:0] ADREG_REG = ADREG;
reg [`DSP58C__ALUMODEREG_SZ-1:0] ALUMODEREG_REG = ALUMODEREG;
reg [`DSP58C__AMULTSEL_SZ:1] AMULTSEL_REG = AMULTSEL;
reg [`DSP58C__AREG_SZ-1:0] AREG_REG = AREG;
reg [`DSP58C__AUTORESET_PATDET_SZ:1] AUTORESET_PATDET_REG = AUTORESET_PATDET;
reg [`DSP58C__AUTORESET_PRIORITY_SZ:1] AUTORESET_PRIORITY_REG = AUTORESET_PRIORITY;
reg [`DSP58C__A_INPUT_SZ:1] A_INPUT_REG = A_INPUT;
reg [`DSP58C__BCASCREG_SZ-1:0] BCASCREG_REG = BCASCREG;
reg [`DSP58C__BMULTSEL_SZ:1] BMULTSEL_REG = BMULTSEL;
reg [`DSP58C__BREG_SZ-1:0] BREG_REG = BREG;
reg [`DSP58C__B_INPUT_SZ:1] B_INPUT_REG = B_INPUT;
reg [`DSP58C__CARRYINREG_SZ-1:0] CARRYINREG_REG = CARRYINREG;
reg [`DSP58C__CARRYINSELREG_SZ-1:0] CARRYINSELREG_REG = CARRYINSELREG;
reg [`DSP58C__CREG_SZ-1:0] CREG_REG = CREG;
reg [`DSP58C__DREG_SZ-1:0] DREG_REG = DREG;
reg [`DSP58C__DSP_MODE_SZ:1] DSP_MODE_REG = DSP_MODE;
reg [`DSP58C__INMODEREG_SZ-1:0] INMODEREG_REG = INMODEREG;
reg [`DSP58C__IS_ALUMODE_INVERTED_SZ-1:0] IS_ALUMODE_INVERTED_REG = IS_ALUMODE_INVERTED;
reg IS_ASYNC_RST_INVERTED_REG = IS_ASYNC_RST_INVERTED;
reg IS_CARRYIN_INVERTED_REG = IS_CARRYIN_INVERTED;
reg IS_CLK_INVERTED_REG = IS_CLK_INVERTED;
reg [`DSP58C__IS_INMODE_INVERTED_SZ-1:0] IS_INMODE_INVERTED_REG = IS_INMODE_INVERTED;
reg [`DSP58C__IS_NEGATE_INVERTED_SZ-1:0] IS_NEGATE_INVERTED_REG = IS_NEGATE_INVERTED;
reg [`DSP58C__IS_OPMODE_INVERTED_SZ-1:0] IS_OPMODE_INVERTED_REG = IS_OPMODE_INVERTED;
reg IS_RSTAD_INVERTED_REG = IS_RSTAD_INVERTED;
reg IS_RSTALLCARRYIN_INVERTED_REG = IS_RSTALLCARRYIN_INVERTED;
reg IS_RSTALUMODE_INVERTED_REG = IS_RSTALUMODE_INVERTED;
reg IS_RSTA_INVERTED_REG = IS_RSTA_INVERTED;
reg IS_RSTB_INVERTED_REG = IS_RSTB_INVERTED;
reg IS_RSTCTRL_INVERTED_REG = IS_RSTCTRL_INVERTED;
reg IS_RSTC_INVERTED_REG = IS_RSTC_INVERTED;
reg IS_RSTD_INVERTED_REG = IS_RSTD_INVERTED;
reg IS_RSTINMODE_INVERTED_REG = IS_RSTINMODE_INVERTED;
reg IS_RSTM_INVERTED_REG = IS_RSTM_INVERTED;
reg IS_RSTP_INVERTED_REG = IS_RSTP_INVERTED;
reg [`DSP58C__MASK_SZ-1:0] MASK_REG = MASK;
reg [`DSP58C__MREG_SZ-1:0] MREG_REG = MREG;
reg [`DSP58C__OPMODEREG_SZ-1:0] OPMODEREG_REG = OPMODEREG;
reg [`DSP58C__PATTERN_SZ-1:0] PATTERN_REG = PATTERN;
reg [`DSP58C__PREADDINSEL_SZ:1] PREADDINSEL_REG = PREADDINSEL;
reg [`DSP58C__PREG_SZ-1:0] PREG_REG = PREG;
reg [`DSP58C__RESET_MODE_SZ:1] RESET_MODE_REG = RESET_MODE;
reg [`DSP58C__RND_SZ-1:0] RND_REG = RND;
reg [`DSP58C__SEL_MASK_SZ:1] SEL_MASK_REG = SEL_MASK;
reg [`DSP58C__SEL_PATTERN_SZ:1] SEL_PATTERN_REG = SEL_PATTERN;
reg [`DSP58C__USE_MULT_SZ:1] USE_MULT_REG = USE_MULT;
reg [`DSP58C__USE_PATTERN_DETECT_SZ:1] USE_PATTERN_DETECT_REG = USE_PATTERN_DETECT;
reg [`DSP58C__USE_SIMD_SZ:1] USE_SIMD_REG = USE_SIMD;
reg [`DSP58C__USE_WIDEXOR_SZ:1] USE_WIDEXOR_REG = USE_WIDEXOR;
reg [`DSP58C__XORSIMD_SZ:1] XORSIMD_REG = XORSIMD;

initial begin
  ATTR[`DSP58C__ACASCREG] = ACASCREG;
  ATTR[`DSP58C__ADREG] = ADREG;
  ATTR[`DSP58C__ALUMODEREG] = ALUMODEREG;
  ATTR[`DSP58C__AMULTSEL] = AMULTSEL;
  ATTR[`DSP58C__AREG] = AREG;
  ATTR[`DSP58C__AUTORESET_PATDET] = AUTORESET_PATDET;
  ATTR[`DSP58C__AUTORESET_PRIORITY] = AUTORESET_PRIORITY;
  ATTR[`DSP58C__A_INPUT] = A_INPUT;
  ATTR[`DSP58C__BCASCREG] = BCASCREG;
  ATTR[`DSP58C__BMULTSEL] = BMULTSEL;
  ATTR[`DSP58C__BREG] = BREG;
  ATTR[`DSP58C__B_INPUT] = B_INPUT;
  ATTR[`DSP58C__CARRYINREG] = CARRYINREG;
  ATTR[`DSP58C__CARRYINSELREG] = CARRYINSELREG;
  ATTR[`DSP58C__CREG] = CREG;
  ATTR[`DSP58C__DREG] = DREG;
  ATTR[`DSP58C__DSP_MODE] = DSP_MODE;
  ATTR[`DSP58C__INMODEREG] = INMODEREG;
  ATTR[`DSP58C__IS_ALUMODE_INVERTED] = IS_ALUMODE_INVERTED;
  ATTR[`DSP58C__IS_ASYNC_RST_INVERTED] = IS_ASYNC_RST_INVERTED;
  ATTR[`DSP58C__IS_CARRYIN_INVERTED] = IS_CARRYIN_INVERTED;
  ATTR[`DSP58C__IS_CLK_INVERTED] = IS_CLK_INVERTED;
  ATTR[`DSP58C__IS_INMODE_INVERTED] = IS_INMODE_INVERTED;
  ATTR[`DSP58C__IS_NEGATE_INVERTED] = IS_NEGATE_INVERTED;
  ATTR[`DSP58C__IS_OPMODE_INVERTED] = IS_OPMODE_INVERTED;
  ATTR[`DSP58C__IS_RSTAD_INVERTED] = IS_RSTAD_INVERTED;
  ATTR[`DSP58C__IS_RSTALLCARRYIN_INVERTED] = IS_RSTALLCARRYIN_INVERTED;
  ATTR[`DSP58C__IS_RSTALUMODE_INVERTED] = IS_RSTALUMODE_INVERTED;
  ATTR[`DSP58C__IS_RSTA_INVERTED] = IS_RSTA_INVERTED;
  ATTR[`DSP58C__IS_RSTB_INVERTED] = IS_RSTB_INVERTED;
  ATTR[`DSP58C__IS_RSTCTRL_INVERTED] = IS_RSTCTRL_INVERTED;
  ATTR[`DSP58C__IS_RSTC_INVERTED] = IS_RSTC_INVERTED;
  ATTR[`DSP58C__IS_RSTD_INVERTED] = IS_RSTD_INVERTED;
  ATTR[`DSP58C__IS_RSTINMODE_INVERTED] = IS_RSTINMODE_INVERTED;
  ATTR[`DSP58C__IS_RSTM_INVERTED] = IS_RSTM_INVERTED;
  ATTR[`DSP58C__IS_RSTP_INVERTED] = IS_RSTP_INVERTED;
  ATTR[`DSP58C__MASK] = MASK;
  ATTR[`DSP58C__MREG] = MREG;
  ATTR[`DSP58C__OPMODEREG] = OPMODEREG;
  ATTR[`DSP58C__PATTERN] = PATTERN;
  ATTR[`DSP58C__PREADDINSEL] = PREADDINSEL;
  ATTR[`DSP58C__PREG] = PREG;
  ATTR[`DSP58C__RESET_MODE] = RESET_MODE;
  ATTR[`DSP58C__RND] = RND;
  ATTR[`DSP58C__SEL_MASK] = SEL_MASK;
  ATTR[`DSP58C__SEL_PATTERN] = SEL_PATTERN;
  ATTR[`DSP58C__USE_MULT] = USE_MULT;
  ATTR[`DSP58C__USE_PATTERN_DETECT] = USE_PATTERN_DETECT;
  ATTR[`DSP58C__USE_SIMD] = USE_SIMD;
  ATTR[`DSP58C__USE_WIDEXOR] = USE_WIDEXOR;
  ATTR[`DSP58C__XORSIMD] = XORSIMD;
end

always @(trig_attr) begin
  ACASCREG_REG = ATTR[`DSP58C__ACASCREG];
  ADREG_REG = ATTR[`DSP58C__ADREG];
  ALUMODEREG_REG = ATTR[`DSP58C__ALUMODEREG];
  AMULTSEL_REG = ATTR[`DSP58C__AMULTSEL];
  AREG_REG = ATTR[`DSP58C__AREG];
  AUTORESET_PATDET_REG = ATTR[`DSP58C__AUTORESET_PATDET];
  AUTORESET_PRIORITY_REG = ATTR[`DSP58C__AUTORESET_PRIORITY];
  A_INPUT_REG = ATTR[`DSP58C__A_INPUT];
  BCASCREG_REG = ATTR[`DSP58C__BCASCREG];
  BMULTSEL_REG = ATTR[`DSP58C__BMULTSEL];
  BREG_REG = ATTR[`DSP58C__BREG];
  B_INPUT_REG = ATTR[`DSP58C__B_INPUT];
  CARRYINREG_REG = ATTR[`DSP58C__CARRYINREG];
  CARRYINSELREG_REG = ATTR[`DSP58C__CARRYINSELREG];
  CREG_REG = ATTR[`DSP58C__CREG];
  DREG_REG = ATTR[`DSP58C__DREG];
  DSP_MODE_REG = ATTR[`DSP58C__DSP_MODE];
  INMODEREG_REG = ATTR[`DSP58C__INMODEREG];
  IS_ALUMODE_INVERTED_REG = ATTR[`DSP58C__IS_ALUMODE_INVERTED];
  IS_ASYNC_RST_INVERTED_REG = ATTR[`DSP58C__IS_ASYNC_RST_INVERTED];
  IS_CARRYIN_INVERTED_REG = ATTR[`DSP58C__IS_CARRYIN_INVERTED];
  IS_CLK_INVERTED_REG = ATTR[`DSP58C__IS_CLK_INVERTED];
  IS_INMODE_INVERTED_REG = ATTR[`DSP58C__IS_INMODE_INVERTED];
  IS_NEGATE_INVERTED_REG = ATTR[`DSP58C__IS_NEGATE_INVERTED];
  IS_OPMODE_INVERTED_REG = ATTR[`DSP58C__IS_OPMODE_INVERTED];
  IS_RSTAD_INVERTED_REG = ATTR[`DSP58C__IS_RSTAD_INVERTED];
  IS_RSTALLCARRYIN_INVERTED_REG = ATTR[`DSP58C__IS_RSTALLCARRYIN_INVERTED];
  IS_RSTALUMODE_INVERTED_REG = ATTR[`DSP58C__IS_RSTALUMODE_INVERTED];
  IS_RSTA_INVERTED_REG = ATTR[`DSP58C__IS_RSTA_INVERTED];
  IS_RSTB_INVERTED_REG = ATTR[`DSP58C__IS_RSTB_INVERTED];
  IS_RSTCTRL_INVERTED_REG = ATTR[`DSP58C__IS_RSTCTRL_INVERTED];
  IS_RSTC_INVERTED_REG = ATTR[`DSP58C__IS_RSTC_INVERTED];
  IS_RSTD_INVERTED_REG = ATTR[`DSP58C__IS_RSTD_INVERTED];
  IS_RSTINMODE_INVERTED_REG = ATTR[`DSP58C__IS_RSTINMODE_INVERTED];
  IS_RSTM_INVERTED_REG = ATTR[`DSP58C__IS_RSTM_INVERTED];
  IS_RSTP_INVERTED_REG = ATTR[`DSP58C__IS_RSTP_INVERTED];
  MASK_REG = ATTR[`DSP58C__MASK];
  MREG_REG = ATTR[`DSP58C__MREG];
  OPMODEREG_REG = ATTR[`DSP58C__OPMODEREG];
  PATTERN_REG = ATTR[`DSP58C__PATTERN];
  PREADDINSEL_REG = ATTR[`DSP58C__PREADDINSEL];
  PREG_REG = ATTR[`DSP58C__PREG];
  RESET_MODE_REG = ATTR[`DSP58C__RESET_MODE];
  RND_REG = ATTR[`DSP58C__RND];
  SEL_MASK_REG = ATTR[`DSP58C__SEL_MASK];
  SEL_PATTERN_REG = ATTR[`DSP58C__SEL_PATTERN];
  USE_MULT_REG = ATTR[`DSP58C__USE_MULT];
  USE_PATTERN_DETECT_REG = ATTR[`DSP58C__USE_PATTERN_DETECT];
  USE_SIMD_REG = ATTR[`DSP58C__USE_SIMD];
  USE_WIDEXOR_REG = ATTR[`DSP58C__USE_WIDEXOR];
  XORSIMD_REG = ATTR[`DSP58C__XORSIMD];
end

// procedures to override, read attribute values

task write_attr;
  input  [`DSP58C_ADDR_SZ-1:0] addr;
  input  [`DSP58C_DATA_SZ-1:0] data;
  begin
    ATTR[addr] = data;
    trig_attr = ~trig_attr; // to be removed
  end
endtask

function [`DSP58C_DATA_SZ-1:0] read_attr;
  input  [`DSP58C_ADDR_SZ-1:0] addr;
  begin
    read_attr = ATTR[addr];
  end
endfunction

task commit_attr;
  begin
trig_attr = ~trig_attr;
  end
endtask
