`include "B_DSP58_TEST_defines.vh"

reg [`DSP58_TEST_DATA_SZ-1:0] ATTR [0:`DSP58_TEST_ADDR_N-1];
reg [31:0] ACASCREG_REG = ACASCREG;
reg [31:0] ADREG_REG = ADREG;
reg [31:0] ALUMODEREG_REG = ALUMODEREG;
reg [16:1] AMULTSEL_REG = AMULTSEL;
reg [31:0] AREG_REG = AREG;
reg ASYNC_INVERT_REG = ASYNC_INVERT;
reg [120:1] AUTORESET_PATDET_REG = AUTORESET_PATDET;
reg [40:1] AUTORESET_PRIORITY_REG = AUTORESET_PRIORITY;
reg [56:1] A_INPUT_REG = A_INPUT;
reg [31:0] BCASCREG_REG = BCASCREG;
reg [16:1] BMULTSEL_REG = BMULTSEL;
reg [31:0] BREG_REG = BREG;
reg [56:1] B_INPUT_REG = B_INPUT;
reg [31:0] CARRYINREG_REG = CARRYINREG;
reg [31:0] CARRYINSELREG_REG = CARRYINSELREG;
reg CLK_INVERT_REG = CLK_INVERT;
reg [31:0] CREG_REG = CREG;
reg [31:0] DREG_REG = DREG;
reg [40:1] DSP_MODE_REG = DSP_MODE;
reg [56:1] EN_SCAN_REG = EN_SCAN;
reg [31:0] INMODEREG_REG = INMODEREG;
reg [3:0] IS_ALUMODE_INVERTED_REG = IS_ALUMODE_INVERTED;
reg IS_CARRYIN_INVERTED_REG = IS_CARRYIN_INVERTED;
reg [4:0] IS_INMODE_INVERTED_REG = IS_INMODE_INVERTED;
reg [2:0] IS_NEGATE_INVERTED_REG = IS_NEGATE_INVERTED;
reg [8:0] IS_OPMODE_INVERTED_REG = IS_OPMODE_INVERTED;
reg IS_RSTALLCARRYIN_INVERTED_REG = IS_RSTALLCARRYIN_INVERTED;
reg IS_RSTALUMODE_INVERTED_REG = IS_RSTALUMODE_INVERTED;
reg IS_RSTA_INVERTED_REG = IS_RSTA_INVERTED;
reg IS_RSTB_INVERTED_REG = IS_RSTB_INVERTED;
reg IS_RSTCTRL_INVERTED_REG = IS_RSTCTRL_INVERTED;
reg IS_RSTC_INVERTED_REG = IS_RSTC_INVERTED;
reg IS_RSTINMODE_INVERTED_REG = IS_RSTINMODE_INVERTED;
reg IS_RSTM_INVERTED_REG = IS_RSTM_INVERTED;
reg IS_RSTP_INVERTED_REG = IS_RSTP_INVERTED;
reg [57:0] MASK_REG = MASK;
reg [31:0] MREG_REG = MREG;
reg [31:0] OPMODEREG_REG = OPMODEREG;
reg [57:0] PATTERN_REG = PATTERN;
reg [8:1] PREADDINSEL_REG = PREADDINSEL;
reg [31:0] PREG_REG = PREG;
reg [40:1] RESET_MODE_REG = RESET_MODE;
reg [57:0] RND_REG = RND;
reg RSTD_INVERT_REG = RSTD_INVERT;
reg [112:1] SEL_MASK_REG = SEL_MASK;
reg [56:1] SEL_PATTERN_REG = SEL_PATTERN;
reg [64:1] USE_MULT_REG = USE_MULT;
reg [72:1] USE_PATTERN_DETECT_REG = USE_PATTERN_DETECT;
reg [48:1] USE_SIMD_REG = USE_SIMD;
reg [40:1] USE_WIDEXOR_REG = USE_WIDEXOR;
reg [120:1] XORSIMD_REG = XORSIMD;

initial begin
  ATTR[`DSP58_TEST__ACASCREG] = ACASCREG;
  ATTR[`DSP58_TEST__ADREG] = ADREG;
  ATTR[`DSP58_TEST__ALUMODEREG] = ALUMODEREG;
  ATTR[`DSP58_TEST__AMULTSEL] = AMULTSEL;
  ATTR[`DSP58_TEST__AREG] = AREG;
  ATTR[`DSP58_TEST__ASYNC_INVERT] = ASYNC_INVERT;
  ATTR[`DSP58_TEST__AUTORESET_PATDET] = AUTORESET_PATDET;
  ATTR[`DSP58_TEST__AUTORESET_PRIORITY] = AUTORESET_PRIORITY;
  ATTR[`DSP58_TEST__A_INPUT] = A_INPUT;
  ATTR[`DSP58_TEST__BCASCREG] = BCASCREG;
  ATTR[`DSP58_TEST__BMULTSEL] = BMULTSEL;
  ATTR[`DSP58_TEST__BREG] = BREG;
  ATTR[`DSP58_TEST__B_INPUT] = B_INPUT;
  ATTR[`DSP58_TEST__CARRYINREG] = CARRYINREG;
  ATTR[`DSP58_TEST__CARRYINSELREG] = CARRYINSELREG;
  ATTR[`DSP58_TEST__CLK_INVERT] = CLK_INVERT;
  ATTR[`DSP58_TEST__CREG] = CREG;
  ATTR[`DSP58_TEST__DREG] = DREG;
  ATTR[`DSP58_TEST__DSP_MODE] = DSP_MODE;
  ATTR[`DSP58_TEST__EN_SCAN] = EN_SCAN;
  ATTR[`DSP58_TEST__INMODEREG] = INMODEREG;
  ATTR[`DSP58_TEST__IS_ALUMODE_INVERTED] = IS_ALUMODE_INVERTED;
  ATTR[`DSP58_TEST__IS_CARRYIN_INVERTED] = IS_CARRYIN_INVERTED;
  ATTR[`DSP58_TEST__IS_INMODE_INVERTED] = IS_INMODE_INVERTED;
  ATTR[`DSP58_TEST__IS_NEGATE_INVERTED] = IS_NEGATE_INVERTED;
  ATTR[`DSP58_TEST__IS_OPMODE_INVERTED] = IS_OPMODE_INVERTED;
  ATTR[`DSP58_TEST__IS_RSTALLCARRYIN_INVERTED] = IS_RSTALLCARRYIN_INVERTED;
  ATTR[`DSP58_TEST__IS_RSTALUMODE_INVERTED] = IS_RSTALUMODE_INVERTED;
  ATTR[`DSP58_TEST__IS_RSTA_INVERTED] = IS_RSTA_INVERTED;
  ATTR[`DSP58_TEST__IS_RSTB_INVERTED] = IS_RSTB_INVERTED;
  ATTR[`DSP58_TEST__IS_RSTCTRL_INVERTED] = IS_RSTCTRL_INVERTED;
  ATTR[`DSP58_TEST__IS_RSTC_INVERTED] = IS_RSTC_INVERTED;
  ATTR[`DSP58_TEST__IS_RSTINMODE_INVERTED] = IS_RSTINMODE_INVERTED;
  ATTR[`DSP58_TEST__IS_RSTM_INVERTED] = IS_RSTM_INVERTED;
  ATTR[`DSP58_TEST__IS_RSTP_INVERTED] = IS_RSTP_INVERTED;
  ATTR[`DSP58_TEST__MASK] = MASK;
  ATTR[`DSP58_TEST__MREG] = MREG;
  ATTR[`DSP58_TEST__OPMODEREG] = OPMODEREG;
  ATTR[`DSP58_TEST__PATTERN] = PATTERN;
  ATTR[`DSP58_TEST__PREADDINSEL] = PREADDINSEL;
  ATTR[`DSP58_TEST__PREG] = PREG;
  ATTR[`DSP58_TEST__RESET_MODE] = RESET_MODE;
  ATTR[`DSP58_TEST__RND] = RND;
  ATTR[`DSP58_TEST__RSTD_INVERT] = RSTD_INVERT;
  ATTR[`DSP58_TEST__SEL_MASK] = SEL_MASK;
  ATTR[`DSP58_TEST__SEL_PATTERN] = SEL_PATTERN;
  ATTR[`DSP58_TEST__USE_MULT] = USE_MULT;
  ATTR[`DSP58_TEST__USE_PATTERN_DETECT] = USE_PATTERN_DETECT;
  ATTR[`DSP58_TEST__USE_SIMD] = USE_SIMD;
  ATTR[`DSP58_TEST__USE_WIDEXOR] = USE_WIDEXOR;
  ATTR[`DSP58_TEST__XORSIMD] = XORSIMD;
end

always @(trig_attr) begin
  ACASCREG_REG = ATTR[`DSP58_TEST__ACASCREG];
  ADREG_REG = ATTR[`DSP58_TEST__ADREG];
  ALUMODEREG_REG = ATTR[`DSP58_TEST__ALUMODEREG];
  AMULTSEL_REG = ATTR[`DSP58_TEST__AMULTSEL];
  AREG_REG = ATTR[`DSP58_TEST__AREG];
  ASYNC_INVERT_REG = ATTR[`DSP58_TEST__ASYNC_INVERT];
  AUTORESET_PATDET_REG = ATTR[`DSP58_TEST__AUTORESET_PATDET];
  AUTORESET_PRIORITY_REG = ATTR[`DSP58_TEST__AUTORESET_PRIORITY];
  A_INPUT_REG = ATTR[`DSP58_TEST__A_INPUT];
  BCASCREG_REG = ATTR[`DSP58_TEST__BCASCREG];
  BMULTSEL_REG = ATTR[`DSP58_TEST__BMULTSEL];
  BREG_REG = ATTR[`DSP58_TEST__BREG];
  B_INPUT_REG = ATTR[`DSP58_TEST__B_INPUT];
  CARRYINREG_REG = ATTR[`DSP58_TEST__CARRYINREG];
  CARRYINSELREG_REG = ATTR[`DSP58_TEST__CARRYINSELREG];
  CLK_INVERT_REG = ATTR[`DSP58_TEST__CLK_INVERT];
  CREG_REG = ATTR[`DSP58_TEST__CREG];
  DREG_REG = ATTR[`DSP58_TEST__DREG];
  DSP_MODE_REG = ATTR[`DSP58_TEST__DSP_MODE];
  EN_SCAN_REG = ATTR[`DSP58_TEST__EN_SCAN];
  INMODEREG_REG = ATTR[`DSP58_TEST__INMODEREG];
  IS_ALUMODE_INVERTED_REG = ATTR[`DSP58_TEST__IS_ALUMODE_INVERTED];
  IS_CARRYIN_INVERTED_REG = ATTR[`DSP58_TEST__IS_CARRYIN_INVERTED];
  IS_INMODE_INVERTED_REG = ATTR[`DSP58_TEST__IS_INMODE_INVERTED];
  IS_NEGATE_INVERTED_REG = ATTR[`DSP58_TEST__IS_NEGATE_INVERTED];
  IS_OPMODE_INVERTED_REG = ATTR[`DSP58_TEST__IS_OPMODE_INVERTED];
  IS_RSTALLCARRYIN_INVERTED_REG = ATTR[`DSP58_TEST__IS_RSTALLCARRYIN_INVERTED];
  IS_RSTALUMODE_INVERTED_REG = ATTR[`DSP58_TEST__IS_RSTALUMODE_INVERTED];
  IS_RSTA_INVERTED_REG = ATTR[`DSP58_TEST__IS_RSTA_INVERTED];
  IS_RSTB_INVERTED_REG = ATTR[`DSP58_TEST__IS_RSTB_INVERTED];
  IS_RSTCTRL_INVERTED_REG = ATTR[`DSP58_TEST__IS_RSTCTRL_INVERTED];
  IS_RSTC_INVERTED_REG = ATTR[`DSP58_TEST__IS_RSTC_INVERTED];
  IS_RSTINMODE_INVERTED_REG = ATTR[`DSP58_TEST__IS_RSTINMODE_INVERTED];
  IS_RSTM_INVERTED_REG = ATTR[`DSP58_TEST__IS_RSTM_INVERTED];
  IS_RSTP_INVERTED_REG = ATTR[`DSP58_TEST__IS_RSTP_INVERTED];
  MASK_REG = ATTR[`DSP58_TEST__MASK];
  MREG_REG = ATTR[`DSP58_TEST__MREG];
  OPMODEREG_REG = ATTR[`DSP58_TEST__OPMODEREG];
  PATTERN_REG = ATTR[`DSP58_TEST__PATTERN];
  PREADDINSEL_REG = ATTR[`DSP58_TEST__PREADDINSEL];
  PREG_REG = ATTR[`DSP58_TEST__PREG];
  RESET_MODE_REG = ATTR[`DSP58_TEST__RESET_MODE];
  RND_REG = ATTR[`DSP58_TEST__RND];
  RSTD_INVERT_REG = ATTR[`DSP58_TEST__RSTD_INVERT];
  SEL_MASK_REG = ATTR[`DSP58_TEST__SEL_MASK];
  SEL_PATTERN_REG = ATTR[`DSP58_TEST__SEL_PATTERN];
  USE_MULT_REG = ATTR[`DSP58_TEST__USE_MULT];
  USE_PATTERN_DETECT_REG = ATTR[`DSP58_TEST__USE_PATTERN_DETECT];
  USE_SIMD_REG = ATTR[`DSP58_TEST__USE_SIMD];
  USE_WIDEXOR_REG = ATTR[`DSP58_TEST__USE_WIDEXOR];
  XORSIMD_REG = ATTR[`DSP58_TEST__XORSIMD];
end

// procedures to override, read attribute values

task write_attr;
  input  [`DSP58_TEST_ADDR_SZ-1:0] addr;
  input  [`DSP58_TEST_DATA_SZ-1:0] data;
  begin
    ATTR[addr] = data;
    trig_attr = ~trig_attr; // to be removed
  end
endtask

function [`DSP58_TEST_DATA_SZ-1:0] read_attr;
  input  [`DSP58_TEST_ADDR_SZ-1:0] addr;
  begin
    read_attr = ATTR[addr];
  end
endfunction

task commit_attr;
  begin
trig_attr = ~trig_attr;
  end
endtask
