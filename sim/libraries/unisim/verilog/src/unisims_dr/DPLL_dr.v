`include "B_DPLL_defines.vh"

reg [`DPLL_DATA_SZ-1:0] ATTR [0:`DPLL_ADDR_N-1];
reg [`DPLL__CLKFBOUT_FRACT_SZ-1:0] CLKFBOUT_FRACT_REG = CLKFBOUT_FRACT;
reg [`DPLL__CLKFBOUT_MULT_SZ-1:0] CLKFBOUT_MULT_REG = CLKFBOUT_MULT;
real CLKIN_FREQ_MAX_REG = CLKIN_FREQ_MAX;
real CLKIN_FREQ_MIN_REG = CLKIN_FREQ_MIN;
real CLKIN_PERIOD_REG = CLKIN_PERIOD;
reg [`DPLL__CLKOUT0_DIVIDE_SZ-1:0] CLKOUT0_DIVIDE_REG = CLKOUT0_DIVIDE;
real CLKOUT0_PHASE_REG = CLKOUT0_PHASE;
reg [`DPLL__CLKOUT0_PHASE_CTRL_SZ-1:0] CLKOUT0_PHASE_CTRL_REG = CLKOUT0_PHASE_CTRL;
reg [`DPLL__CLKOUT1_DIVIDE_SZ-1:0] CLKOUT1_DIVIDE_REG = CLKOUT1_DIVIDE;
real CLKOUT1_PHASE_REG = CLKOUT1_PHASE;
reg [`DPLL__CLKOUT1_PHASE_CTRL_SZ-1:0] CLKOUT1_PHASE_CTRL_REG = CLKOUT1_PHASE_CTRL;
reg [`DPLL__CLKOUT2_DIVIDE_SZ-1:0] CLKOUT2_DIVIDE_REG = CLKOUT2_DIVIDE;
real CLKOUT2_PHASE_REG = CLKOUT2_PHASE;
reg [`DPLL__CLKOUT2_PHASE_CTRL_SZ-1:0] CLKOUT2_PHASE_CTRL_REG = CLKOUT2_PHASE_CTRL;
reg [`DPLL__CLKOUT3_DIVIDE_SZ-1:0] CLKOUT3_DIVIDE_REG = CLKOUT3_DIVIDE;
real CLKOUT3_PHASE_REG = CLKOUT3_PHASE;
reg [`DPLL__CLKOUT3_PHASE_CTRL_SZ-1:0] CLKOUT3_PHASE_CTRL_REG = CLKOUT3_PHASE_CTRL;
real CLKTDC_FREQ_MAX_REG = CLKTDC_FREQ_MAX;
real CLKTDC_FREQ_MIN_REG = CLKTDC_FREQ_MIN;
reg [`DPLL__DESKEW_DELAY_SZ-1:0] DESKEW_DELAY_REG = DESKEW_DELAY;
reg [`DPLL__DESKEW_DELAY_EN_SZ:1] DESKEW_DELAY_EN_REG = DESKEW_DELAY_EN;
reg [`DPLL__DESKEW_DELAY_PATH_SZ:1] DESKEW_DELAY_PATH_REG = DESKEW_DELAY_PATH;
reg [`DPLL__DIVCLK_DIVIDE_SZ-1:0] DIVCLK_DIVIDE_REG = DIVCLK_DIVIDE;
reg IS_CLKFB_DESKEW_INVERTED_REG = IS_CLKFB_DESKEW_INVERTED;
reg IS_CLKIN_DESKEW_INVERTED_REG = IS_CLKIN_DESKEW_INVERTED;
reg IS_CLKIN_INVERTED_REG = IS_CLKIN_INVERTED;
reg IS_PSEN_INVERTED_REG = IS_PSEN_INVERTED;
reg IS_PSINCDEC_INVERTED_REG = IS_PSINCDEC_INVERTED;
reg IS_PWRDWN_INVERTED_REG = IS_PWRDWN_INVERTED;
reg IS_RST_INVERTED_REG = IS_RST_INVERTED;
reg [`DPLL__LOCK_WAIT_SZ:1] LOCK_WAIT_REG = LOCK_WAIT;
reg [`DPLL__PERF_MODE_SZ:1] PERF_MODE_REG = PERF_MODE;
real REF_JITTER_REG = REF_JITTER;
reg SEL_LOCKED_IN_REG = SEL_LOCKED_IN;
reg [`DPLL__SEL_REG_DELAY_SZ-1:0] SEL_REG_DELAY_REG = SEL_REG_DELAY;
reg USE_REG_VALID_REG = USE_REG_VALID;
real VCOCLK_FREQ_MAX_REG = VCOCLK_FREQ_MAX;
real VCOCLK_FREQ_MIN_REG = VCOCLK_FREQ_MIN;
reg [`DPLL__ZHOLD_SZ:1] ZHOLD_REG = ZHOLD;

initial begin
  ATTR[`DPLL__CLKFBOUT_FRACT] = CLKFBOUT_FRACT;
  ATTR[`DPLL__CLKFBOUT_MULT] = CLKFBOUT_MULT;
  ATTR[`DPLL__CLKIN_FREQ_MAX] = $realtobits(CLKIN_FREQ_MAX);
  ATTR[`DPLL__CLKIN_FREQ_MIN] = $realtobits(CLKIN_FREQ_MIN);
  ATTR[`DPLL__CLKIN_PERIOD] = $realtobits(CLKIN_PERIOD);
  ATTR[`DPLL__CLKOUT0_DIVIDE] = CLKOUT0_DIVIDE;
  ATTR[`DPLL__CLKOUT0_PHASE] = $realtobits(CLKOUT0_PHASE);
  ATTR[`DPLL__CLKOUT0_PHASE_CTRL] = CLKOUT0_PHASE_CTRL;
  ATTR[`DPLL__CLKOUT1_DIVIDE] = CLKOUT1_DIVIDE;
  ATTR[`DPLL__CLKOUT1_PHASE] = $realtobits(CLKOUT1_PHASE);
  ATTR[`DPLL__CLKOUT1_PHASE_CTRL] = CLKOUT1_PHASE_CTRL;
  ATTR[`DPLL__CLKOUT2_DIVIDE] = CLKOUT2_DIVIDE;
  ATTR[`DPLL__CLKOUT2_PHASE] = $realtobits(CLKOUT2_PHASE);
  ATTR[`DPLL__CLKOUT2_PHASE_CTRL] = CLKOUT2_PHASE_CTRL;
  ATTR[`DPLL__CLKOUT3_DIVIDE] = CLKOUT3_DIVIDE;
  ATTR[`DPLL__CLKOUT3_PHASE] = $realtobits(CLKOUT3_PHASE);
  ATTR[`DPLL__CLKOUT3_PHASE_CTRL] = CLKOUT3_PHASE_CTRL;
  ATTR[`DPLL__CLKTDC_FREQ_MAX] = $realtobits(CLKTDC_FREQ_MAX);
  ATTR[`DPLL__CLKTDC_FREQ_MIN] = $realtobits(CLKTDC_FREQ_MIN);
  ATTR[`DPLL__DESKEW_DELAY] = DESKEW_DELAY;
  ATTR[`DPLL__DESKEW_DELAY_EN] = DESKEW_DELAY_EN;
  ATTR[`DPLL__DESKEW_DELAY_PATH] = DESKEW_DELAY_PATH;
  ATTR[`DPLL__DIVCLK_DIVIDE] = DIVCLK_DIVIDE;
  ATTR[`DPLL__IS_CLKFB_DESKEW_INVERTED] = IS_CLKFB_DESKEW_INVERTED;
  ATTR[`DPLL__IS_CLKIN_DESKEW_INVERTED] = IS_CLKIN_DESKEW_INVERTED;
  ATTR[`DPLL__IS_CLKIN_INVERTED] = IS_CLKIN_INVERTED;
  ATTR[`DPLL__IS_PSEN_INVERTED] = IS_PSEN_INVERTED;
  ATTR[`DPLL__IS_PSINCDEC_INVERTED] = IS_PSINCDEC_INVERTED;
  ATTR[`DPLL__IS_PWRDWN_INVERTED] = IS_PWRDWN_INVERTED;
  ATTR[`DPLL__IS_RST_INVERTED] = IS_RST_INVERTED;
  ATTR[`DPLL__LOCK_WAIT] = LOCK_WAIT;
  ATTR[`DPLL__PERF_MODE] = PERF_MODE;
  ATTR[`DPLL__REF_JITTER] = $realtobits(REF_JITTER);
  ATTR[`DPLL__SEL_LOCKED_IN] = SEL_LOCKED_IN;
  ATTR[`DPLL__SEL_REG_DELAY] = SEL_REG_DELAY;
  ATTR[`DPLL__USE_REG_VALID] = USE_REG_VALID;
  ATTR[`DPLL__VCOCLK_FREQ_MAX] = $realtobits(VCOCLK_FREQ_MAX);
  ATTR[`DPLL__VCOCLK_FREQ_MIN] = $realtobits(VCOCLK_FREQ_MIN);
  ATTR[`DPLL__ZHOLD] = ZHOLD;
end

always @(trig_attr) begin
  CLKFBOUT_FRACT_REG = ATTR[`DPLL__CLKFBOUT_FRACT];
  CLKFBOUT_MULT_REG = ATTR[`DPLL__CLKFBOUT_MULT];
  CLKIN_FREQ_MAX_REG = $bitstoreal(ATTR[`DPLL__CLKIN_FREQ_MAX]);
  CLKIN_FREQ_MIN_REG = $bitstoreal(ATTR[`DPLL__CLKIN_FREQ_MIN]);
  CLKIN_PERIOD_REG = $bitstoreal(ATTR[`DPLL__CLKIN_PERIOD]);
  CLKOUT0_DIVIDE_REG = ATTR[`DPLL__CLKOUT0_DIVIDE];
  CLKOUT0_PHASE_CTRL_REG = ATTR[`DPLL__CLKOUT0_PHASE_CTRL];
  CLKOUT0_PHASE_REG = $bitstoreal(ATTR[`DPLL__CLKOUT0_PHASE]);
  CLKOUT1_DIVIDE_REG = ATTR[`DPLL__CLKOUT1_DIVIDE];
  CLKOUT1_PHASE_CTRL_REG = ATTR[`DPLL__CLKOUT1_PHASE_CTRL];
  CLKOUT1_PHASE_REG = $bitstoreal(ATTR[`DPLL__CLKOUT1_PHASE]);
  CLKOUT2_DIVIDE_REG = ATTR[`DPLL__CLKOUT2_DIVIDE];
  CLKOUT2_PHASE_CTRL_REG = ATTR[`DPLL__CLKOUT2_PHASE_CTRL];
  CLKOUT2_PHASE_REG = $bitstoreal(ATTR[`DPLL__CLKOUT2_PHASE]);
  CLKOUT3_DIVIDE_REG = ATTR[`DPLL__CLKOUT3_DIVIDE];
  CLKOUT3_PHASE_CTRL_REG = ATTR[`DPLL__CLKOUT3_PHASE_CTRL];
  CLKOUT3_PHASE_REG = $bitstoreal(ATTR[`DPLL__CLKOUT3_PHASE]);
  CLKTDC_FREQ_MAX_REG = $bitstoreal(ATTR[`DPLL__CLKTDC_FREQ_MAX]);
  CLKTDC_FREQ_MIN_REG = $bitstoreal(ATTR[`DPLL__CLKTDC_FREQ_MIN]);
  DESKEW_DELAY_EN_REG = ATTR[`DPLL__DESKEW_DELAY_EN];
  DESKEW_DELAY_PATH_REG = ATTR[`DPLL__DESKEW_DELAY_PATH];
  DESKEW_DELAY_REG = ATTR[`DPLL__DESKEW_DELAY];
  DIVCLK_DIVIDE_REG = ATTR[`DPLL__DIVCLK_DIVIDE];
  IS_CLKFB_DESKEW_INVERTED_REG = ATTR[`DPLL__IS_CLKFB_DESKEW_INVERTED];
  IS_CLKIN_DESKEW_INVERTED_REG = ATTR[`DPLL__IS_CLKIN_DESKEW_INVERTED];
  IS_CLKIN_INVERTED_REG = ATTR[`DPLL__IS_CLKIN_INVERTED];
  IS_PSEN_INVERTED_REG = ATTR[`DPLL__IS_PSEN_INVERTED];
  IS_PSINCDEC_INVERTED_REG = ATTR[`DPLL__IS_PSINCDEC_INVERTED];
  IS_PWRDWN_INVERTED_REG = ATTR[`DPLL__IS_PWRDWN_INVERTED];
  IS_RST_INVERTED_REG = ATTR[`DPLL__IS_RST_INVERTED];
  LOCK_WAIT_REG = ATTR[`DPLL__LOCK_WAIT];
  PERF_MODE_REG = ATTR[`DPLL__PERF_MODE];
  REF_JITTER_REG = $bitstoreal(ATTR[`DPLL__REF_JITTER]);
  SEL_LOCKED_IN_REG = ATTR[`DPLL__SEL_LOCKED_IN];
  SEL_REG_DELAY_REG = ATTR[`DPLL__SEL_REG_DELAY];
  USE_REG_VALID_REG = ATTR[`DPLL__USE_REG_VALID];
  VCOCLK_FREQ_MAX_REG = $bitstoreal(ATTR[`DPLL__VCOCLK_FREQ_MAX]);
  VCOCLK_FREQ_MIN_REG = $bitstoreal(ATTR[`DPLL__VCOCLK_FREQ_MIN]);
  ZHOLD_REG = ATTR[`DPLL__ZHOLD];
end

// procedures to override, read attribute values

task write_attr;
  input  [`DPLL_ADDR_SZ-1:0] addr;
  input  [`DPLL_DATA_SZ-1:0] data;
  begin
    ATTR[addr] = data;
    trig_attr = ~trig_attr; // to be removed
  end
endtask

function [`DPLL_DATA_SZ-1:0] read_attr;
  input  [`DPLL_ADDR_SZ-1:0] addr;
  begin
    read_attr = ATTR[addr];
  end
endfunction

task commit_attr;
  begin
trig_attr = ~trig_attr;
  end
endtask
